{"version":3,"sources":["components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/common/FormControls/FormControls.jsx","components/Settings/MyProfileSettings/MyProfileSettings.module.css","components/Settings/MyProfileSettings/MyProfileSettings.jsx","components/Settings/MyProfileSettings/MyProfileSettingsContainer.jsx","components/Settings/Settings.jsx"],"names":["module","exports","required","value","undefined","maxLength","max","length","maxLength3000","email","test","FromControl","input","meta","props","hasError","checkSubmit","touched","error","submitFailed","side","style","right","left","errorSignSide","rightSignError","leftSignError","className","formControl","wrapperClassName","children","classnames","errorMessageBlock","errorMessage","Textarea","restProps","inputClassName","Input","MyProfileSettingsFromRedux","reduxForm","form","onSubmit","handleSubmit","settingsForm","formStyle","summaryFormError","settingsFormError","settingsSectionInputs","settingsSectionTitle","settingsInputBlock","settingsLabel","htmlFor","Field","settingsFormInput","settingsFormWrapper","component","name","validate","settingsFormTextarea","settingsFormCheckbox","type","Object","keys","profile","contacts","map","key","settingsContactsInputBlock","settingsContactsLabel","settingsButtonInputBlock","settingsSubmitButton","MyProfileSettings","formData","onSubmitForm","initialValues","MyProfileSettingsAPIContainer","saveProfile","this","initProfile","id","unsetUserProfile","init","Preloader","React","Component","actionCreators","unsetUserProfileActionCreator","saveProfileDataThunkCreator","MyProfileSettingsContainer","compose","connect","state","getId","getProfile","userProfileReducer","Settings","to","withRouter","location","pathname","indexOf"],"mappings":"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","file":"static/js/7.89db2922.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__20Vm3\",\"error\":\"FormControls_error__PGvtL\",\"errorMessageBlock\":\"FormControls_errorMessageBlock__6UYSD\",\"rightSignError\":\"FormControls_rightSignError__1ozix\",\"leftSignError\":\"FormControls_leftSignError__3LVnT\",\"right\":\"FormControls_right__24pmc\",\"left\":\"FormControls_left__22KrQ\",\"errorMessage\":\"FormControls_errorMessage__1dqQA\",\"summaryFormError\":\"FormControls_summaryFormError__2Y5V-\"};","export const required = (value) => {\r\n    let check = value ? undefined : 'Field is required';\r\n    return check;\r\n}\r\n\r\nconst maxLength = max => value => value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nexport const maxLength10 = maxLength(10);\r\nexport const maxLength300 = maxLength(300);\r\nexport const maxLength3000 = maxLength(3000);\r\n\r\nexport const email = value => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;","import React from 'react';\r\nimport style from './FormControls.module.css';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * \r\n * Сделать нормальные отображения ошибок!!!\r\n * \r\n */\r\n/** используется деструктуризация (rest оператор) */\r\nconst FromControl = ({\r\n    input, \r\n    meta,\r\n    ...props\r\n}) => {\r\n    const hasError = props.checkSubmit ? meta.touched && meta.error && meta.submitFailed : meta.touched && meta.error;\r\n    const side = (props.side && props.side === 'right') ? style.right : style.left;\r\n    const errorSignSide = (props.errorSignSide && props.errorSignSide === 'right') ? style.rightSignError : style.leftSignError;\r\n\r\n    return (\r\n        <div className={\r\n            style.formControl + ' ' \r\n            + errorSignSide + ' ' \r\n            + props.wrapperClassName + ' '\r\n            + (hasError ? style.error : '')\r\n        }>\r\n            {props.children}\r\n            {\r\n                ( hasError ) ?\r\n                    <div className={classnames(style.errorMessageBlock, side)}>\r\n                        <span className={style.errorMessage}>\r\n                            {meta.error}\r\n                        </span>\r\n                    </div> \r\n                : ''\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    const inputClassName = props.inputClassName ? props.inputClassName : '';\r\n    const wrapperClassName = props.wrapperClassName ? props.wrapperClassName : '';\r\n\r\n    return <FromControl \r\n        {...props} \r\n        side={props.side} \r\n        errorSignSide={props.errorSignSide} \r\n        wrapperClassName={wrapperClassName}\r\n    > \r\n        <textarea {...input} {...restProps} className={inputClassName}/> \r\n    </FromControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    const inputClassName = props.inputClassName ? props.inputClassName : '';\r\n    const wrapperClassName = props.wrapperClassName ? props.wrapperClassName : '';\r\n\r\n    return <FromControl \r\n        {...props} \r\n        side={props.side} \r\n        errorSignSide={props.errorSignSide} \r\n        wrapperClassName={wrapperClassName}\r\n    > \r\n        <input {...input} {...restProps} className={inputClassName}/> \r\n    </FromControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsForm\":\"MyProfileSettings_settingsForm__2vhDT\",\"settingsSectionTitle\":\"MyProfileSettings_settingsSectionTitle__YNPAA\",\"settingsSectionInputs\":\"MyProfileSettings_settingsSectionInputs__2HFg2\",\"settingsLabel\":\"MyProfileSettings_settingsLabel__184Ld\",\"settingsInputBlock\":\"MyProfileSettings_settingsInputBlock__2ejYp\",\"settingsFormTextarea\":\"MyProfileSettings_settingsFormTextarea__39G2r\",\"settingsContactsInputBlock\":\"MyProfileSettings_settingsContactsInputBlock__3PilL\",\"settingsContactsLabel\":\"MyProfileSettings_settingsContactsLabel__1cI8r\",\"settingsButtonInputBlock\":\"MyProfileSettings_settingsButtonInputBlock__39aeH\",\"settingsSubmitButton\":\"MyProfileSettings_settingsSubmitButton__1TBV4\",\"settingsFormError\":\"MyProfileSettings_settingsFormError__Kmbzp\"};","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport formStyle from '../../common/FormControls/FormControls.module.css';\r\nimport {Input, Textarea} from '../../common/FormControls/FormControls';\r\nimport style from './MyProfileSettings.module.css';\r\nimport { required } from \"../../../utils/validators/validators\";\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst MyProfileSettingsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.settingsForm}>\r\n            {\r\n                props.error ?\r\n                <div className={formStyle.summaryFormError + ' ' + style.settingsFormError}>\r\n                    {props.error}\r\n                </div> : ''\r\n            }\r\n            <div className={style.settingsSectionInputs}>\r\n                <div className={style.settingsSectionTitle}>\r\n                    Main information\r\n                </div>\r\n                <div className={style.settingsInputBlock}>\r\n                    <label className={style.settingsLabel} htmlFor=\"rememberMe\">\r\n                        Full name\r\n                    </label>\r\n                    <Field\r\n                        inputClassName={style.settingsFormInput}\r\n                        wrapperClassName={style.settingsFormWrapper}\r\n                        component={Input}\r\n                        name=\"fullName\"\r\n                        validate={[required]}\r\n                        side='right'\r\n                        errorSignSide='rigth'\r\n                    />\r\n                </div>\r\n                <div className={style.settingsInputBlock}>\r\n                    <label className={style.settingsLabel} htmlFor=\"rememberMe\">\r\n                        About me\r\n                    </label>\r\n                    <Field\r\n                        inputClassName={style.settingsFormTextarea}\r\n                        wrapperClassName={style.settingsFormWrapper}\r\n                        component={Textarea}\r\n                        name=\"aboutMe\"\r\n                    />\r\n                </div>\r\n                <div className={style.settingsInputBlock}>\r\n                    <label className={style.settingsLabel} htmlFor=\"lookingForAJob\">\r\n                        Looking For A Job?\r\n                    </label>\r\n                    <Field\r\n                        inputClassName={style.settingsFormCheckbox}\r\n                        wrapperClassName={style.settingsFormWrapper}\r\n                        component={Input}\r\n                        type=\"checkbox\"\r\n                        name=\"lookingForAJob\"\r\n                    />\r\n                </div>\r\n                <div className={style.settingsInputBlock}>\r\n                    <label className={style.settingsLabel} htmlFor=\"rememberMe\">\r\n                        Looking for a job description\r\n                    </label>\r\n                    <Field\r\n                        inputClassName={style.settingsFormTextarea}\r\n                        wrapperClassName={style.settingsFormWrapper}\r\n                        component={Textarea}\r\n                        name=\"lookingForAJobDescription\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={style.settingsSectionInputs}>\r\n                <div className={style.settingsSectionTitle}>\r\n                    Contacts\r\n                </div>\r\n                {\r\n                    Object.keys(props.profile.contacts).map( key => {\r\n                        return (\r\n                            <div className={classnames(style.settingsInputBlock, style.settingsContactsInputBlock)}>\r\n                                <label className={style.settingsLabel + ' ' + style.settingsContactsLabel + ' ' + key} htmlFor=\"rememberMe\">\r\n                                    {key}\r\n                                </label>\r\n                                <Field\r\n                                    inputClassName={style.settingsFormInput}\r\n                                    wrapperClassName={style.settingsFormWrapper}\r\n                                    component={Input}\r\n                                    type=\"text\"\r\n                                    name={\"contacts.\" + key}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n            <div className={style.settingsButtonInputBlock}>\r\n                <button className={style.settingsSubmitButton} type=\"submit\">\r\n                    Submit\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet MyProfileSettingsFromRedux = reduxForm({\r\n    form: 'myprofileSettings'\r\n})(MyProfileSettingsForm);\r\n\r\nconst MyProfileSettings = (props) => {\r\n    const onSubmitForm = (formData) => {\r\n        props.onSubmitForm(formData);\r\n    }\r\n    return <MyProfileSettingsFromRedux onSubmit={onSubmitForm} {...props} initialValues={props.profile}/>;\r\n}\r\n\r\nexport default MyProfileSettings;","import React from 'react';\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    initProfile,\r\n    unsetUserProfileActionCreator,\r\n    saveProfileDataThunkCreator\r\n} from '../../../redux/userProfileReducer';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport { getId, getProfile } from '../../../redux/selectors/profileSelector';\r\nimport MyProfileSettings from './MyProfileSettings';\r\n\r\n\r\nclass MyProfileSettingsAPIContainer extends React.Component \r\n{\r\n    componentDidMount() {\r\n        this.props.initProfile(this.props.id);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.props.unsetUserProfile();\r\n    }\r\n\r\n    onSubmitForm = (formData) => {\r\n        this.props.saveProfile(formData);\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.init) {\r\n            return <Preloader />;\r\n        }\r\n        return (\r\n            <MyProfileSettings \r\n                {...this.props} \r\n                profile={this.props.profile} \r\n                onSubmitForm={this.onSubmitForm}\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: getId(state),\r\n        profile: getProfile(state),\r\n        init: state.userProfileReducer.init,\r\n    };\r\n};\r\n\r\nconst actionCreators = {\r\n    unsetUserProfile: unsetUserProfileActionCreator,\r\n    initProfile: initProfile,\r\n    saveProfile: saveProfileDataThunkCreator,\r\n};\r\n\r\nlet MyProfileSettingsContainer = compose(\r\n    connect(mapStateToProps, actionCreators),\r\n)(MyProfileSettingsAPIContainer);\r\n\r\nexport default MyProfileSettingsContainer;","import React from 'react';\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\nimport MyProfileSettingsContainer from './MyProfileSettings/MyProfileSettingsContainer';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <NavLink to='/settings/myprofile'>\r\n                    <li>\r\n                        My profile info\r\n                    </li>\r\n                </NavLink>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst SettingsContainer = (props) => {\r\n    if (props.location.pathname.indexOf('myprofile', props.location.pathname) !== -1) {\r\n        return (\r\n            <MyProfileSettingsContainer />\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <Settings />\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(withRouter)(SettingsContainer);"],"sourceRoot":""}