{"version":3,"sources":["components/UserProfile/UserProfile.module.css","components/UserProfile/UserProfileStatus/UserProfileStatus.module.css","components/UserProfile/UserProfileStatus/UserProfileStatus.jsx","components/UserProfile/UserProfileStatus/UserProfileStatusContainer.jsx","components/UserProfile/UserProfile.jsx","components/UserProfile/UserProfileContainer.jsx"],"names":["module","exports","UserProfileStatus","state","status","props","prevProps","prevState","this","setState","className","style","statusBlock","userInfoTitle","statusTitle","statusText","onDoubleClick","activateStatusEditMode","onTouchStart","React","Component","UserProfileStatusContainer","compose","connect","getStatus","UserProfile","profile","hasContacts","contacts","key","undefined","user","userImageBlock","photos","large","src","alt","userImage","undefinedUser","userInfoBlock","userInfoBlockItem","userFullnameBlock","userFullnameTitle","userFullname","fullName","userContactsBlock","userContactsList","map","url","userContactsListItem","href","userContactsUnavailable","userAboutBlock","userAbout","aboutMe","UserProfileAPIContainer","setUserInfo","userId","initProfile","match","params","unsetUserProfile","Preloader","actionCreators","unsetUserProfileActionCreator","UserProfileContainer","getProfile","withRouter"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,eAAiB,oCAAoC,UAAY,+BAA+B,cAAgB,mCAAmC,kBAAoB,uCAAuC,kBAAoB,uCAAuC,cAAgB,mCAAmC,eAAiB,oCAAoC,UAAY,iC,oBCAhbD,EAAOC,QAAU,CAAC,YAAc,uCAAuC,WAAa,sCAAsC,cAAgB,2C,yKCsC3HC,E,4MAlCXC,MAAQ,CACJC,OAAQ,EAAKC,MAAMD,Q,iEAGJE,EAAWC,GACtBD,EAAUF,SAAWI,KAAKH,MAAMD,QAChCI,KAAKC,SAAS,CACVL,OAAQI,KAAKH,MAAMD,W,+BAM3B,OACI,yBAAKM,UAAWC,IAAMC,aAClB,wBAAIF,UAAWC,IAAME,cAAgB,IAAMF,IAAMG,aAAjD,UAGA,0BACIJ,UAAWC,IAAMI,WACjBC,cAAeR,KAAKS,uBACpBC,aAAcV,KAAKS,wBAGS,KAAtBT,KAAKH,MAAMD,QAAuC,OAAtBI,KAAKH,MAAMD,OACvCI,KAAKH,MAAMD,OACX,kB,GA5BMe,IAAMC,WCavBC,EAJkBC,YAC7BC,aARoB,SAACpB,GACrB,MAAO,CACHC,OAAQoB,YAAUrB,MAGH,IAEUmB,CAE/BpB,GC+DauB,EAvEG,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAIZC,GAAc,EACdC,EAAW,GAEf,IAAK,IAAIC,KAAOH,EAAQE,cACSE,IAAzBJ,EAAQE,SAASC,MACjBF,GAAc,EACdC,EAASC,GAAOH,EAAQE,SAASC,KAIzC,OACI,yBAAKnB,UAAWC,IAAMoB,MAClB,yBAAKrB,UAAWC,IAAMqB,gBAEdN,EAAQO,OAAOC,MACb,yBAAKC,IAAKT,EAAQO,OAAOC,MAAOE,IAAI,GAAG1B,UAAWC,IAAM0B,YACxD,yBAAKF,IAAKG,IAAeF,IAAI,GAAG1B,UAAWC,IAAM0B,aAG3D,yBAAK3B,UAAWC,IAAM4B,eAClB,yBAAK7B,UAAWC,IAAM6B,kBAAoB,IAAM7B,IAAM8B,mBAClD,wBAAI/B,UAAWC,IAAME,cAAgB,IAAMF,IAAM+B,mBAAjD,YAGA,0BAAMhC,UAAWC,IAAMgC,cAClBjB,EAAQkB,UAEb,kBAAC,EAAD,OAEJ,yBAAKlC,UAAWC,IAAM6B,kBAAoB,IAAM7B,IAAMkC,mBAClD,wBAAInC,UAAWC,IAAME,cAAgB,IAAMF,IAAM+B,mBAAjD,YAIIf,EAEI,wBAAIjB,UAAWC,IAAMmC,kBAEblB,EAASmB,KAAK,SAACC,EAAKnB,GAAN,OACV,wBAAInB,UAAWC,IAAMsC,qBAAuB,IAAMpB,GAC9C,uBAAGqB,KAAMF,GACJnB,QAOrB,0BAAMnB,UAAWC,IAAMwC,yBAAvB,oCAMhB,yBAAKzC,UAAWC,IAAMyC,gBAClB,uBAAG1C,UAAWC,IAAM0C,WAEZ3B,EAAQ4B,QACN5B,EAAQ4B,QA5DV,6Z,uBCKlBC,E,4MAEFC,YAAc,SAACC,GACX,EAAKpD,MAAMqD,YAAYD,I,kEAIvBjD,KAAKgD,YAAYhD,KAAKH,MAAMsD,MAAMC,OAAOH,U,6CAGzCjD,KAAKH,MAAMwD,qB,+BAIX,OAAKrD,KAAKH,MAAMqB,QAIZ,kBAAC,EAAD,iBACQlB,KAAKH,MADb,CAEIqB,QAASlB,KAAKH,MAAMqB,WALjB,kBAACoC,EAAA,EAAD,U,GAfmB3C,IAAMC,WAgCxC2C,EAAiB,CACjBF,iBAAkBG,IAClBN,YAAaA,KAGbO,EAAuB3C,YACvBC,aAXoB,SAACpB,GACrB,MAAO,CACHuB,QAASwC,YAAW/D,MASC4D,GACzBI,IAFuB7C,CAGzBiC,GAEaU","file":"static/js/9.36fdade0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserProfile_user__3bh0K\",\"userImageBlock\":\"UserProfile_userImageBlock__15U3Z\",\"userImage\":\"UserProfile_userImage__CrBXn\",\"userInfoBlock\":\"UserProfile_userInfoBlock__2gFyZ\",\"userFullnameBlock\":\"UserProfile_userFullnameBlock__zyd0f\",\"userFullnameTitle\":\"UserProfile_userFullnameTitle__2aWfm\",\"userInfoTitle\":\"UserProfile_userInfoTitle__3QjKT\",\"userAboutBlock\":\"UserProfile_userAboutBlock__3Ynez\",\"userAbout\":\"UserProfile_userAbout__2ZcsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBlock\":\"UserProfileStatus_statusBlock__1gV8e\",\"statusText\":\"UserProfileStatus_statusText__1cdSD\",\"userInfoTitle\":\"UserProfileStatus_userInfoTitle__qZpoN\"};","import React from \"react\";\r\nimport style from \"./UserProfileStatus.module.css\";\r\n\r\nclass UserProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        status: this.props.status,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.statusBlock}>\r\n                <h3 className={style.userInfoTitle + \" \" + style.statusTitle}>\r\n                    Status\r\n                </h3>\r\n                <span\r\n                    className={style.statusText}\r\n                    onDoubleClick={this.activateStatusEditMode}\r\n                    onTouchStart={this.activateStatusEditMode}\r\n                >\r\n                    {\r\n                        ( this.props.status !== '' && this.props.status !== null ) \r\n                        ? this.props.status \r\n                        : 'No status'\r\n                    }\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfileStatus;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { getStatus } from \"../../../redux/selectors/profileSelector\";\r\nimport UserProfileStatus from \"./UserProfileStatus\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: getStatus(state),\r\n    }\r\n}\r\nconst actionCreators = {}\r\n\r\nlet UserProfileStatusContainer = compose(\r\n    connect(mapStateToProps, actionCreators)\r\n)(UserProfileStatus);\r\n\r\nexport default UserProfileStatusContainer;","import React from 'react';\r\nimport style from './UserProfile.module.css';\r\nimport undefinedUser from '../../img/undefinedUser.png';\r\nimport UserProfileStatusContainer from './UserProfileStatus/UserProfileStatusContainer';\r\n\r\n\r\nlet UserProfile = ({profile}) => {\r\n\r\n    let templateAbout = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tempus libero vel massa vulputate congue. Aenean commodo sem vitae dolor varius, in cursus est semper. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Maecenas nulla augue, pretium in metus eu, gravida auctor quam. Donec et sem metus. Nulla sit amet eros sem. Sed vel lacinia est, id laoreet erat.';\r\n\r\n    let hasContacts = false;\r\n    let contacts = [];\r\n\r\n    for (let key in profile.contacts) {\r\n        if (profile.contacts.key !== undefined) {\r\n            hasContacts = true;\r\n            contacts[key] = profile.contacts.key;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.user}>\r\n            <div className={style.userImageBlock}>\r\n                {\r\n                    profile.photos.large\r\n                    ? <img src={profile.photos.large} alt=\"\" className={style.userImage} />\r\n                    : <img src={undefinedUser} alt=\"\" className={style.userImage} />\r\n                }\r\n            </div>\r\n            <div className={style.userInfoBlock}>\r\n                <div className={style.userInfoBlockItem + ' ' + style.userFullnameBlock}>\r\n                    <h3 className={style.userInfoTitle + ' ' + style.userFullnameTitle}>\r\n                        Fullname\r\n                    </h3>\r\n                    <span className={style.userFullname}>\r\n                        {profile.fullName}\r\n                    </span>\r\n                    <UserProfileStatusContainer />\r\n                </div>\r\n                <div className={style.userInfoBlockItem + ' ' + style.userContactsBlock}>\r\n                    <h3 className={style.userInfoTitle + ' ' + style.userFullnameTitle}>\r\n                        Contacts\r\n                    </h3>\r\n                    {\r\n                        hasContacts\r\n                        ?                     \r\n                            <ul className={style.userContactsList}>\r\n                                {\r\n                                    contacts.map( (url, key) => (\r\n                                        <li className={style.userContactsListItem + ' ' + key}>\r\n                                            <a href={url}>\r\n                                                {key}\r\n                                            </a>\r\n                                        </li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        : \r\n                            <span className={style.userContactsUnavailable}>\r\n                                User has no available contatcs\r\n                            </span>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={style.userAboutBlock}>\r\n                <p className={style.userAbout}>\r\n                    {\r\n                        profile.aboutMe\r\n                        ? profile.aboutMe\r\n                        : templateAbout\r\n                    }\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UserProfile from './UserProfile';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {\r\n    unsetUserProfileActionCreator,\r\n    initProfile\r\n} from '../../redux/userProfileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getProfile } from '../../redux/selectors/profileSelector';\r\n\r\n\r\nclass UserProfileAPIContainer extends React.Component \r\n{\r\n    setUserInfo = (userId) => {\r\n        this.props.initProfile(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setUserInfo(this.props.match.params.userId);\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.unsetUserProfile();\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.profile) {\r\n            return <Preloader />;\r\n        }\r\n        return (\r\n            <UserProfile \r\n                {...this.props} \r\n                profile={this.props.profile} \r\n            />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n    }\r\n}\r\nlet actionCreators = {\r\n    unsetUserProfile: unsetUserProfileActionCreator,\r\n    initProfile: initProfile\r\n}\r\n\r\nlet UserProfileContainer = compose(\r\n    connect(mapStateToProps, actionCreators),\r\n    withRouter,\r\n)(UserProfileAPIContainer)\r\n\r\nexport default UserProfileContainer;"],"sourceRoot":""}