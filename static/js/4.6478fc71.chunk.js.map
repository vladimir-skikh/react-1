{"version":3,"sources":["components/common/FormControls/FormControls.module.css","utils/validators/validators.ts","components/common/FormControls/FormControls.tsx","components/Messages/Messages.module.css","components/Messages/Dialog/Dialog.module.css","components/Messages/ActiveDialog/ActiveDialog.module.css","components/Messages/ActiveDialog/Message/Message.module.css","components/Messages/Dialog/Dialog.jsx","components/Messages/ActiveDialog/Message/Message.jsx","components/Messages/ActiveDialog/ActiveDialog.jsx","redux/selectors/messagesSelector.ts","components/Messages/ActiveDialog/ActiveDialogContainer.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["module","exports","required","value","undefined","maxLength","max","length","maxLength3000","email","test","FromControl","meta","children","formControlProps","hasError","checkSubmit","touched","error","submitFailed","side","style","right","left","errorSignSide","rightSignError","leftSignError","className","formControl","wrapperClassName","classnames","errorMessageBlock","errorMessage","Textarea","props","input","restProps","inputClassName","Input","Dialog","path","id","to","dialog","src","avatar","alt","dialogDesc","name","message","lastMessage","AllMessages","author","message_block_left","text","text_right","message_block_right","text_left","NewMessageFromRedux","reduxForm","form","onSubmit","handleSubmit","messageFormBody","messageTextBlock","Field","messageText","messageTextWrapper","component","type","validate","send","ActiveDialog","activeDialogMessage","activeDialogMessagesData","map","Message","activeDialog_block","dialogWindow","formData","addNewMessage","newMessage","getDialogsUsers","state","messagesReducer","dialogsData","getActiveDisalogMessages","actionCreators","addNewMessageActionCreator","ActiveDialogContainer","connect","Messages","dialogs","key","messages","activeDialog","MessagesContainer","compose","dispatch","withAuthRedirect"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,kBAAoB,wCAAwC,eAAiB,qCAAqC,cAAgB,oCAAoC,MAAQ,4BAA4B,KAAO,2BAA2B,aAAe,mCAAmC,iBAAmB,yC,iCCDvZ,sGAAO,IAAMC,EAAW,SAACC,GAErB,OADYA,OAAQC,EAAY,qBAI9BC,EAAY,SACdC,GADc,OAEb,SAACH,GAAD,OAAuCA,GAASA,EAAMI,OAASD,EAAxB,kBAAyCA,EAAzC,4BAAoEF,IAGnGI,GAFcH,EAAU,IACTA,EAAU,KACTA,EAAU,MAE1BI,EAAQ,SAACN,GAAD,OAAuCA,IAAU,4CAA4CO,KAAKP,GAAS,6BAA0BC,I,qKCQpJO,EAAwC,SAAC,GAIxC,IAHHC,EAGE,EAHFA,KACAC,EAEE,EAFFA,SACAC,EACE,EADFA,iBAEMC,EAAWD,EAAiBE,YAAcJ,EAAKK,SAAWL,EAAKM,OAASN,EAAKO,aAAeP,EAAKK,SAAWL,EAAKM,MACjHE,EAAQN,EAAiBM,MAAkC,UAA1BN,EAAiBM,KAAoBC,IAAMC,MAAQD,IAAME,KAC1FC,EAAiBV,EAAiBU,eAAoD,UAAnCV,EAAiBU,cAA6BH,IAAMI,eAAiBJ,IAAMK,cAEpI,OACI,yBAAKC,UACDN,IAAMO,YAAc,IAClBJ,EAAgB,IAChBV,EAAiBe,iBAAmB,KACnCd,EAAWM,IAAMH,MAAQ,KAE3BL,EAEKE,EACE,yBAAKY,UAAWG,IAAWT,IAAMU,kBAAmBX,IAChD,0BAAMO,UAAWN,IAAMW,cAClBpB,EAAKM,QAGhB,KAMLe,EAAmD,SAACC,GAAW,IACjEC,EAA6BD,EAA7BC,MAAOvB,EAAsBsB,EAAtBtB,KAASwB,EADgD,YACnCF,EADmC,kBAGjEpB,EAAmC,CACrCuB,eAAgBH,EAAMG,eAAiBH,EAAMG,eAAiB,GAC9DR,iBAAkBK,EAAML,iBAAmBK,EAAML,iBAAmB,GACpET,KAAMc,EAAMd,KACZI,cAAeU,EAAMV,eAGzB,OAAO,kBAACb,EAAD,iBACCuB,EADD,CAEHtB,KAAMA,EACNuB,MAAOA,EACPrB,iBAAkBA,IAElB,8CAAcqB,EAAWC,EAAzB,CAAoCT,UAAWb,EAAiBuB,oBAI3DC,EAAgD,SAACJ,GAAW,IAC9DC,EAA6BD,EAA7BC,MAAOvB,EAAsBsB,EAAtBtB,KAASwB,EAD6C,YAChCF,EADgC,kBAG9DpB,EAAmC,CACrCuB,eAAgBH,EAAMG,eAAiBH,EAAMG,eAAiB,GAC9DR,iBAAkBK,EAAML,iBAAmBK,EAAML,iBAAmB,GACpET,KAAMc,EAAMd,KACZI,cAAeU,EAAMV,eAGzB,OAAO,kBAACb,EAAD,CACHC,KAAMA,EACNuB,MAAOA,EACPrB,iBAAkBA,GAElB,2CAAWqB,EAAWC,EAAtB,CAAiCT,UAAWb,EAAiBuB,qB,oBCpFrErC,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,0BAA0B,aAAe,iC,oBCA3GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,2BAA2B,OAAS,uBAAuB,KAAO,qBAAqB,QAAU,0B,oBCAhKD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,QAAU,8BAA8B,gBAAkB,sCAAsC,iBAAmB,uCAAuC,mBAAqB,yCAAyC,YAAc,kCAAkC,KAAO,6B,oBCAnVD,EAAOC,QAAU,CAAC,mBAAqB,oCAAoC,oBAAsB,qCAAqC,OAAS,wBAAwB,KAAO,sBAAsB,WAAa,4BAA4B,UAAY,6B,gHCkB1OsC,EAdF,SAACL,GAEV,IAAIM,EAAO,aAAeN,EAAMO,GAEhC,OACI,kBAAC,IAAD,CAASC,GAAIF,EAAMb,UAAWN,IAAMsB,QAChC,yBAAKC,IAAKV,EAAMW,OAAQC,IAAI,GAAGnB,UAAWN,IAAMwB,SAChD,yBAAKlB,UAAWN,IAAM0B,YAClB,0BAAMpB,UAAWN,IAAM2B,MAAOd,EAAMc,MACpC,0BAAMrB,UAAWN,IAAM4B,SAAUf,EAAMgB,gB,wECUxCC,EArBG,SAACjB,GACf,MAAqB,UAAjBA,EAAMkB,OAEF,yBAAKzB,UAAWN,IAAMgC,oBAClB,yBAAKT,IAAKV,EAAMW,OAAQC,IAAI,GAAGnB,UAAWN,IAAMwB,SAChD,uBAAGlB,UAAWN,IAAMiC,KAAO,IAAMjC,IAAMkC,YAClCrB,EAAMe,UAMf,yBAAKtB,UAAWN,IAAMmC,qBAClB,yBAAKZ,IAAKV,EAAMW,OAAQC,IAAI,GAAGnB,UAAWN,IAAMwB,SAChD,uBAAGlB,UAAWN,IAAMiC,KAAO,IAAMjC,IAAMoC,WAClCvB,EAAMe,WCmCrBS,EAAsBC,YAAU,CAClCC,KAAM,kBADkBD,EAvBL,SAACzB,GACpB,OACI,0BAAM2B,SAAU3B,EAAM4B,aAAcnC,UAAWN,IAAM4B,SACjD,yBAAKtB,UAAWN,IAAM0C,iBAClB,yBAAKpC,UAAWN,IAAM2C,kBAClB,kBAACC,EAAA,EAAD,CACI5B,eAAgBhB,IAAM6C,YACtBrC,iBAAkBR,IAAM8C,mBACxBC,UAAW9B,IACX+B,KAAK,OACLrB,KAAK,aACLsB,SAAU,CAACpE,KACXc,aAAa,KAGrB,4BAAQqD,KAAK,SAAS1C,UAAWN,IAAMkD,MAAvC,aAWDC,EAjDI,SAACtC,GAChB,IAAIuC,EAAsBvC,EAAMwC,yBAAyBC,KAAI,SAAC1B,GAAD,OACzD,kBAAC2B,EAAD,CACIxB,OAAQH,EAAQG,OAChBP,OAAQI,EAAQJ,OAChBI,QAASA,EAAQA,aAQzB,OACI,yBAAKtB,UAAWN,IAAMwD,oBAClB,yBAAKlD,UAAWN,IAAMyD,cAAeL,GACrC,6BACI,kBAACf,EAAD,CAAqBG,SARd,SAACkB,GAChB7C,EAAM8C,cAAcD,EAASE,kB,QCdxBC,EAAkB,SAACC,GAC5B,OAAOA,EAAMC,gBAAgBC,aAEpBC,EAA2B,SAACH,GACrC,OAAOA,EAAMC,gBAAgBV,0BCI7Ba,EAAiB,CACjBP,cAAeQ,KAIJC,EAFeC,aATR,SAACP,GACnB,MAAO,CACHT,yBAA0BY,EAAyBH,MAOJI,EAAzBG,CAAyClB,GCexDmB,EAxBA,SAACzD,GAEZ,IAAI0D,EAAU1D,EAAMmD,YACfV,KAAK,SAAAhC,GAAM,OACR,kBAAC,EAAD,CACIE,OAAQF,EAAOE,OACfG,KAAML,EAAOK,KACbE,YAAaP,EAAOO,YACpBT,GAAIE,EAAOF,GACXoD,IAAKlD,EAAOF,QAIxB,OACI,yBAAKd,UAAWN,IAAMyE,UAClB,yBAAKnE,UAAWN,IAAMuE,SACjBA,GAEL,yBAAKjE,UAAWN,IAAM0E,cAClB,kBAAC,EAAD,S,gBCTVC,EAAoBC,kBACtBP,aAVkB,SAACP,GACnB,MAAO,CACHE,YAAaH,EAAgBC,OAGZ,SAACe,GACtB,MAAO,MAKPC,IAFsBF,CAGxBN,GAEaK","file":"static/js/4.6478fc71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__20Vm3\",\"error\":\"FormControls_error__PGvtL\",\"errorMessageBlock\":\"FormControls_errorMessageBlock__6UYSD\",\"rightSignError\":\"FormControls_rightSignError__1ozix\",\"leftSignError\":\"FormControls_leftSignError__3LVnT\",\"right\":\"FormControls_right__24pmc\",\"left\":\"FormControls_left__22KrQ\",\"errorMessage\":\"FormControls_errorMessage__1dqQA\",\"summaryFormError\":\"FormControls_summaryFormError__2Y5V-\"};","export const required = (value: string): string | undefined => {\r\n    let check = value ? undefined : 'Field is required';\r\n    return check;\r\n}\r\n\r\nconst maxLength = (\r\n    max: number\r\n) => (value: string): string | undefined => value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nexport const maxLength10 = maxLength(10);\r\nexport const maxLength300 = maxLength(300);\r\nexport const maxLength3000 = maxLength(3000);\r\n\r\nexport const email = (value: string): string | undefined => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;","import React, { FC } from 'react';\r\nimport style from './FormControls.module.css';\r\nimport classnames from 'classnames';\r\nimport { WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form';\r\n\r\ntype InputPropsType = {\r\n    inputClassName?: string\r\n    wrapperClassName?: string\r\n    side?: string\r\n    checkSubmit?: boolean\r\n    errorSignSide?: string\r\n}\r\n\r\ntype FromControlPropsType = {\r\n    input: any,\r\n    meta: WrappedFieldMetaProps,\r\n    formControlProps: InputPropsType\r\n}\r\n\r\n/** используется деструктуризация (rest оператор) */\r\nconst FromControl: FC<FromControlPropsType> = ({\r\n    meta,\r\n    children, \r\n    formControlProps\r\n}) => {\r\n    const hasError = formControlProps.checkSubmit ? meta.touched && meta.error && meta.submitFailed : meta.touched && meta.error;\r\n    const side = (formControlProps.side && formControlProps.side === 'right') ? style.right : style.left;\r\n    const errorSignSide = (formControlProps.errorSignSide && formControlProps.errorSignSide === 'right') ? style.rightSignError : style.leftSignError;\r\n\r\n    return (\r\n        <div className={\r\n            style.formControl + ' ' \r\n            + errorSignSide + ' ' \r\n            + formControlProps.wrapperClassName + ' '\r\n            + (hasError ? style.error : '')\r\n        }>\r\n            {children}\r\n            {\r\n                ( hasError ) ?\r\n                    <div className={classnames(style.errorMessageBlock, side)}>\r\n                        <span className={style.errorMessage}>\r\n                            {meta.error}\r\n                        </span>\r\n                    </div> \r\n                : ''\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea: FC<WrappedFieldProps & InputPropsType> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n\r\n    const formControlProps: InputPropsType = {\r\n        inputClassName: props.inputClassName ? props.inputClassName : '',\r\n        wrapperClassName: props.wrapperClassName ? props.wrapperClassName : '',\r\n        side: props.side,\r\n        errorSignSide: props.errorSignSide\r\n    }\r\n\r\n    return <FromControl \r\n        {...props} \r\n        meta={meta}\r\n        input={input}\r\n        formControlProps={formControlProps}\r\n    > \r\n        <textarea {...input} {...restProps} className={formControlProps.inputClassName}/> \r\n    </FromControl>\r\n}\r\n\r\nexport const Input: FC<WrappedFieldProps & InputPropsType> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n\r\n    const formControlProps: InputPropsType = {\r\n        inputClassName: props.inputClassName ? props.inputClassName : '',\r\n        wrapperClassName: props.wrapperClassName ? props.wrapperClassName : '',\r\n        side: props.side,\r\n        errorSignSide: props.errorSignSide\r\n    }\r\n\r\n    return <FromControl \r\n        meta={meta}\r\n        input={input}\r\n        formControlProps={formControlProps}\r\n    > \r\n        <input {...input} {...restProps} className={formControlProps.inputClassName}/> \r\n    </FromControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__1hBEj\",\"dialogs\":\"Messages_dialogs__sD73q\",\"activeDialog\":\"Messages_activeDialog__pt0-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1N3GF\",\"dialogDesc\":\"Dialog_dialogDesc__2sfWx\",\"avatar\":\"Dialog_avatar__1qp0e\",\"name\":\"Dialog_name__28eCP\",\"message\":\"Dialog_message__iI5Oy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogWindow\":\"ActiveDialog_dialogWindow__2H4w5\",\"message\":\"ActiveDialog_message__3d1Ih\",\"messageFormBody\":\"ActiveDialog_messageFormBody__H3O7r\",\"messageTextBlock\":\"ActiveDialog_messageTextBlock__3R85v\",\"messageTextWrapper\":\"ActiveDialog_messageTextWrapper__1YO9g\",\"messageText\":\"ActiveDialog_messageText__1lL9E\",\"send\":\"ActiveDialog_send__2uVZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_block_left\":\"Message_message_block_left__2sAVf\",\"message_block_right\":\"Message_message_block_right__302RQ\",\"avatar\":\"Message_avatar__kb42a\",\"text\":\"Message_text__2NNjK\",\"text_right\":\"Message_text_right__2hNBj\",\"text_left\":\"Message_text_left__3dvYL\"};","import React from \"react\";\r\nimport style from \"./Dialog.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nlet Dialog = (props) => {\r\n\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <NavLink to={path} className={style.dialog}>\r\n            <img src={props.avatar} alt=\"\" className={style.avatar} />\r\n            <div className={style.dialogDesc}>\r\n                <span className={style.name}>{props.name}</span>\r\n                <span className={style.message}>{props.lastMessage}</span>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n};\r\nexport default Dialog;\r\n","import React from \"react\";\r\nimport style from \"./Message.module.css\";\r\n\r\nlet AllMessages = (props) => {\r\n    if (props.author === \"other\") {\r\n        return (\r\n            <div className={style.message_block_left}>\r\n                <img src={props.avatar} alt=\"\" className={style.avatar} />\r\n                <p className={style.text + ' ' + style.text_right}>\r\n                    {props.message}\r\n                </p>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={style.message_block_right}>\r\n                <img src={props.avatar} alt=\"\" className={style.avatar} />\r\n                <p className={style.text + ' ' + style.text_left}>\r\n                    {props.message}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default AllMessages;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../../utils/validators/validators\";\r\nimport { Input } from \"../../common/FormControls/FormControls\";\r\nimport style from \"./ActiveDialog.module.css\";\r\nimport Message from \"./Message/Message\";\r\n\r\nlet ActiveDialog = (props) => {\r\n    let activeDialogMessage = props.activeDialogMessagesData.map((message) => (\r\n        <Message\r\n            author={message.author}\r\n            avatar={message.avatar}\r\n            message={message.message}\r\n        />\r\n    ));\r\n\r\n    let onAddMessage = (formData) => {\r\n        props.addNewMessage(formData.newMessage);\r\n    };\r\n\r\n    return (\r\n        <div className={style.activeDialog_block}>\r\n            <div className={style.dialogWindow}>{activeDialogMessage}</div>\r\n            <div>\r\n                <NewMessageFromRedux onSubmit={onAddMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst NewMessageFrom = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.message}>\r\n            <div className={style.messageFormBody}>\r\n                <div className={style.messageTextBlock}>\r\n                    <Field\r\n                        inputClassName={style.messageText}\r\n                        wrapperClassName={style.messageTextWrapper}\r\n                        component={Input}\r\n                        type=\"text\"\r\n                        name=\"newMessage\"\r\n                        validate={[required]}\r\n                        checkSubmit={true}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className={style.send}>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst NewMessageFromRedux = reduxForm({\r\n    form: 'newMessageForm',\r\n})(NewMessageFrom);\r\nexport default ActiveDialog;\r\n","import { AppStateType } from './../reduxStore';\r\nimport { DialogType, MessageType } from './../types/types';\r\n\r\nexport const getDialogsUsers = (state: AppStateType): Array<DialogType> => {\r\n    return state.messagesReducer.dialogsData;\r\n}\r\nexport const getActiveDisalogMessages = (state: AppStateType): Array<MessageType> => {\r\n    return state.messagesReducer.activeDialogMessagesData;\r\n}","import { connect } from \"react-redux\";\r\nimport ActiveDialog from \"./ActiveDialog\";\r\nimport {addNewMessageActionCreator} from '../../../redux/messagesPageReducer'\r\nimport { getActiveDisalogMessages } from \"../../../redux/selectors/messagesSelector\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        activeDialogMessagesData: getActiveDisalogMessages(state),\r\n    }\r\n}\r\n\r\nlet actionCreators = {\r\n    addNewMessage: addNewMessageActionCreator,\r\n}\r\nconst ActiveDialogContainer = connect(mapStateToProps, actionCreators)(ActiveDialog);\r\n\r\nexport default ActiveDialogContainer;\r\n","import React from \"react\";\r\nimport style from \"./Messages.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport ActiveDialogContainer from \"./ActiveDialog/ActiveDialogContainer\";\r\n\r\nlet Messages = (props) => {\r\n\r\n    let dialogs = props.dialogsData\r\n        .map( dialog => \r\n            <Dialog\r\n                avatar={dialog.avatar}\r\n                name={dialog.name}\r\n                lastMessage={dialog.lastMessage}\r\n                id={dialog.id}\r\n                key={dialog.id}\r\n            />\r\n        );\r\n\r\n    return (\r\n        <div className={style.messages}>\r\n            <div className={style.dialogs}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={style.activeDialog}>\r\n                <ActiveDialogContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Messages;\r\n","import { connect } from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\nimport withAuthRedirect from \"../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getDialogsUsers } from \"../../redux/selectors/messagesSelector\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: getDialogsUsers(state),\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nconst MessagesContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messages);\r\n\r\nexport default MessagesContainer;\r\n"],"sourceRoot":""}