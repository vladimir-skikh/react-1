{"version":3,"sources":["components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/common/FormControls/FormControls.jsx","components/Login/Login.module.css","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["module","exports","required","value","undefined","maxLength","max","length","maxLength3000","email","test","FromControl","input","meta","props","hasError","checkSubmit","touched","error","submitFailed","side","style","right","left","errorSignSide","rightSignError","leftSignError","className","formControl","wrapperClassName","children","classnames","errorMessageBlock","errorMessage","Textarea","restProps","inputClassName","Input","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","formStyle","summaryFormError","loginInputBlock","Field","loginFormInput","loginFormWrapper","component","type","placeholder","name","validate","loginLabel","loginLabelRememberMe","htmlFor","loginFormCheckbox","captchaUrl","loginFormCaptchaBlock","src","alt","loginFormCaptchaImage","loginSubmitButton","Login","isAuth","to","loginPage","login","socialNetworkTitle","formTitle","formDescription","formData","submitLogin","actionCreators","setIsAuthThunkCreator","LoginContainer","connect","state","authReducer"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,kBAAoB,wCAAwC,eAAiB,qCAAqC,cAAgB,oCAAoC,MAAQ,4BAA4B,KAAO,2BAA2B,aAAe,mCAAmC,iBAAmB,yC,iCCDvZ,sGAAO,IAAMC,EAAW,SAACC,GAErB,OADYA,OAAQC,EAAY,qBAI9BC,EAAY,SAAAC,GAAG,OAAI,SAAAH,GAAK,OAAIA,GAASA,EAAMI,OAASD,EAAxB,kBAAyCA,EAAzC,4BAAoEF,IAGzFI,GAFcH,EAAU,IACTA,EAAU,KACTA,EAAU,MAE1BI,EAAQ,SAAAN,GAAK,OAAIA,IAAU,4CAA4CO,KAAKP,GAAS,6BAA0BC,I,qKCAtHO,EAAc,SAAC,GAIf,EAHFC,MAGG,IAFHC,EAEE,EAFFA,KACGC,EACD,gCACIC,EAAWD,EAAME,YAAcH,EAAKI,SAAWJ,EAAKK,OAASL,EAAKM,aAAeN,EAAKI,SAAWJ,EAAKK,MACtGE,EAAQN,EAAMM,MAAuB,UAAfN,EAAMM,KAAoBC,IAAMC,MAAQD,IAAME,KACpEC,EAAiBV,EAAMU,eAAyC,UAAxBV,EAAMU,cAA6BH,IAAMI,eAAiBJ,IAAMK,cAE9G,OACI,yBAAKC,UACDN,IAAMO,YAAc,IAClBJ,EAAgB,IAChBV,EAAMe,iBAAmB,KACxBd,EAAWM,IAAMH,MAAQ,KAE3BJ,EAAMgB,SAEDf,EACE,yBAAKY,UAAWI,IAAWV,IAAMW,kBAAmBZ,IAChD,0BAAMO,UAAWN,IAAMY,cAClBpB,EAAKK,QAGhB,KAMLgB,EAAW,SAACpB,GAAW,IACzBF,EAA6BE,EAA7BF,MAAgBuB,GAAarB,EAAtBD,KADiB,YACKC,EADL,mBAEzBsB,EAAiBtB,EAAMsB,eAAiBtB,EAAMsB,eAAiB,GAC/DP,EAAmBf,EAAMe,iBAAmBf,EAAMe,iBAAmB,GAE3E,OAAO,kBAAClB,EAAD,iBACCG,EADD,CAEHM,KAAMN,EAAMM,KACZI,cAAeV,EAAMU,cACrBK,iBAAkBA,IAElB,8CAAcjB,EAAWuB,EAAzB,CAAoCR,UAAWS,OAI1CC,EAAQ,SAACvB,GAAW,IACtBF,EAA6BE,EAA7BF,MAAgBuB,GAAarB,EAAtBD,KADc,YACQC,EADR,mBAEtBsB,EAAiBtB,EAAMsB,eAAiBtB,EAAMsB,eAAiB,GAC/DP,EAAmBf,EAAMe,iBAAmBf,EAAMe,iBAAmB,GAE3E,OAAO,kBAAClB,EAAD,iBACCG,EADD,CAEHM,KAAMN,EAAMM,KACZI,cAAeV,EAAMU,cACrBK,iBAAkBA,IAElB,2CAAWjB,EAAWuB,EAAtB,CAAiCR,UAAWS,Q,oBCjEpDpC,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,mBAAqB,kCAAkC,UAAY,yBAAyB,gBAAkB,+BAA+B,gBAAkB,+BAA+B,eAAiB,8BAA8B,kBAAoB,iCAAiC,WAAa,0BAA0B,qBAAuB,oCAAoC,kBAAoB,mC,2JCkFxeqC,EAAiBC,YAAU,CAC3BC,KAAM,SADWD,EA3EH,SAACzB,GACf,OACI,0BAAM2B,SAAU3B,EAAM4B,cAEd5B,EAAMI,MACN,yBAAKS,UAAWgB,IAAUC,kBACrB9B,EAAMI,OACF,GAEb,yBAAKS,UAAWN,IAAMwB,iBAClB,kBAACC,EAAA,EAAD,CACIV,eAAgBf,IAAM0B,eACtBlB,iBAAkBR,IAAM2B,iBACxBC,UAAWZ,IACXa,KAAK,QACLC,YAAa,QACbC,KAAK,QACLC,SAAU,CAACnD,IAAUO,KACrBW,KAAK,QACLI,cAAc,WAGtB,yBAAKG,UAAWN,IAAMwB,iBAClB,kBAACC,EAAA,EAAD,CACIV,eAAgBf,IAAM0B,eACtBlB,iBAAkBR,IAAM2B,iBACxBC,UAAWZ,IACXa,KAAK,WACLC,YAAa,WACbC,KAAK,WACLC,SAAU,CAACnD,KACXkB,KAAK,QACLI,cAAc,WAGtB,yBAAKG,UAAWN,IAAMwB,iBAClB,2BAAOlB,UAAWN,IAAMiC,WAAa,IAAMjC,IAAMkC,qBAAsBC,QAAQ,cAA/E,gBAGA,kBAACV,EAAA,EAAD,CACIV,eAAgBf,IAAMoC,kBACtBR,UAAWZ,IACXa,KAAK,WACLE,KAAK,aACL5B,cAAc,WAIlBV,EAAM4C,WACF,yBAAK/B,UAAWN,IAAMsC,uBAClB,yBAAKC,IAAK9C,EAAM4C,WAAYG,IAAI,UAAUlC,UAAWN,IAAMyC,wBAC3D,yBAAKnC,UAAWN,IAAMwB,iBAClB,2BAAOlB,UAAWN,IAAMiC,WAAYE,QAAQ,cAA5C,4BAGA,kBAACV,EAAA,EAAD,CACIV,eAAgBf,IAAM0B,eACtBE,UAAWZ,IACXa,KAAK,OACLE,KAAK,UACLC,SAAU,CAACnD,KACXsB,cAAc,YAGjB,GAEjB,yBAAKG,UAAWN,IAAMwB,iBAClB,4BAAQlB,UAAWN,IAAM0C,kBAAmBb,KAAK,UAAjD,gBA+BDc,EAnBD,SAAClD,GAKX,OAAIA,EAAMmD,OAAe,kBAAC,IAAD,CAAUC,GAAG,aAGlC,yBAAKvC,UAAWN,IAAM8C,WAClB,yBAAKxC,UAAWN,IAAM+C,OAClB,wBAAIzC,UAAWN,IAAMgD,oBAArB,aACA,wBAAI1C,UAAWN,IAAMiD,WAArB,SACA,yBAAK3C,UAAWN,IAAMkD,iBAAtB,yBACA,kBAACjC,EAAD,CAAgBG,SAZX,SAAC+B,GACd1D,EAAM2D,YAAYD,IAW0Bd,WAAY5C,EAAM4C,gBCzFhEgB,EAAiB,CACnBD,YAAaE,KAGbC,EAAiBC,aAXG,SAACC,GACrB,MAAO,CACHb,OAAQa,EAAMC,YAAYd,OAC1BP,WAAYoB,EAAMC,YAAYrB,cAQQgB,EAAzBG,CAAyCb,GAE/CY","file":"static/js/6.e5dbf93a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__20Vm3\",\"error\":\"FormControls_error__PGvtL\",\"errorMessageBlock\":\"FormControls_errorMessageBlock__6UYSD\",\"rightSignError\":\"FormControls_rightSignError__1ozix\",\"leftSignError\":\"FormControls_leftSignError__3LVnT\",\"right\":\"FormControls_right__24pmc\",\"left\":\"FormControls_left__22KrQ\",\"errorMessage\":\"FormControls_errorMessage__1dqQA\",\"summaryFormError\":\"FormControls_summaryFormError__2Y5V-\"};","export const required = (value) => {\r\n    let check = value ? undefined : 'Field is required';\r\n    return check;\r\n}\r\n\r\nconst maxLength = max => value => value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nexport const maxLength10 = maxLength(10);\r\nexport const maxLength300 = maxLength(300);\r\nexport const maxLength3000 = maxLength(3000);\r\n\r\nexport const email = value => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;","import React from 'react';\r\nimport style from './FormControls.module.css';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * \r\n * Сделать нормальные отображения ошибок!!!\r\n * \r\n */\r\n/** используется деструктуризация (rest оператор) */\r\nconst FromControl = ({\r\n    input, \r\n    meta,\r\n    ...props\r\n}) => {\r\n    const hasError = props.checkSubmit ? meta.touched && meta.error && meta.submitFailed : meta.touched && meta.error;\r\n    const side = (props.side && props.side === 'right') ? style.right : style.left;\r\n    const errorSignSide = (props.errorSignSide && props.errorSignSide === 'right') ? style.rightSignError : style.leftSignError;\r\n\r\n    return (\r\n        <div className={\r\n            style.formControl + ' ' \r\n            + errorSignSide + ' ' \r\n            + props.wrapperClassName + ' '\r\n            + (hasError ? style.error : '')\r\n        }>\r\n            {props.children}\r\n            {\r\n                ( hasError ) ?\r\n                    <div className={classnames(style.errorMessageBlock, side)}>\r\n                        <span className={style.errorMessage}>\r\n                            {meta.error}\r\n                        </span>\r\n                    </div> \r\n                : ''\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    const inputClassName = props.inputClassName ? props.inputClassName : '';\r\n    const wrapperClassName = props.wrapperClassName ? props.wrapperClassName : '';\r\n\r\n    return <FromControl \r\n        {...props} \r\n        side={props.side} \r\n        errorSignSide={props.errorSignSide} \r\n        wrapperClassName={wrapperClassName}\r\n    > \r\n        <textarea {...input} {...restProps} className={inputClassName}/> \r\n    </FromControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    const inputClassName = props.inputClassName ? props.inputClassName : '';\r\n    const wrapperClassName = props.wrapperClassName ? props.wrapperClassName : '';\r\n\r\n    return <FromControl \r\n        {...props} \r\n        side={props.side} \r\n        errorSignSide={props.errorSignSide} \r\n        wrapperClassName={wrapperClassName}\r\n    > \r\n        <input {...input} {...restProps} className={inputClassName}/> \r\n    </FromControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__r2kUf\",\"login\":\"Login_login____9XR\",\"socialNetworkTitle\":\"Login_socialNetworkTitle__2o4nF\",\"formTitle\":\"Login_formTitle__sqK0p\",\"formDescription\":\"Login_formDescription__3_fyp\",\"loginInputBlock\":\"Login_loginInputBlock__3qIdN\",\"loginFormInput\":\"Login_loginFormInput__1xw4L\",\"loginFormCheckbox\":\"Login_loginFormCheckbox___N2ih\",\"loginLabel\":\"Login_loginLabel__2cW9U\",\"loginLabelRememberMe\":\"Login_loginLabelRememberMe__b7Q8S\",\"loginSubmitButton\":\"Login_loginSubmitButton__1hZOp\"};","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, email } from \"../../utils/validators/validators\";\r\nimport {Input} from '../common/FormControls/FormControls';\r\nimport formStyle from '../common/FormControls/FormControls.module.css';\r\nimport style from \"./Login.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {\r\n                props.error ?\r\n                <div className={formStyle.summaryFormError}>\r\n                    {props.error}\r\n                </div> : ''\r\n            }\r\n            <div className={style.loginInputBlock}>\r\n                <Field\r\n                    inputClassName={style.loginFormInput}\r\n                    wrapperClassName={style.loginFormWrapper}\r\n                    component={Input}\r\n                    type=\"email\"\r\n                    placeholder={\"Email\"}\r\n                    name=\"email\"\r\n                    validate={[required, email]}\r\n                    side=\"right\"\r\n                    errorSignSide='right'\r\n                />\r\n            </div>\r\n            <div className={style.loginInputBlock}>\r\n                <Field\r\n                    inputClassName={style.loginFormInput}\r\n                    wrapperClassName={style.loginFormWrapper}\r\n                    component={Input}\r\n                    type=\"password\"\r\n                    placeholder={\"Password\"}\r\n                    name=\"password\"\r\n                    validate={[required]}\r\n                    side=\"right\"\r\n                    errorSignSide='right'\r\n                />\r\n            </div>\r\n            <div className={style.loginInputBlock}>\r\n                <label className={style.loginLabel + ' ' + style.loginLabelRememberMe} htmlFor=\"rememberMe\">\r\n                    Remember Me?\r\n                </label>\r\n                <Field\r\n                    inputClassName={style.loginFormCheckbox}\r\n                    component={Input}\r\n                    type=\"checkbox\"\r\n                    name=\"rememberMe\"\r\n                    errorSignSide='right'\r\n                />\r\n            </div>\r\n            {\r\n                props.captchaUrl ?\r\n                    <div className={style.loginFormCaptchaBlock}>\r\n                        <img src={props.captchaUrl} alt=\"Captcha\" className={style.loginFormCaptchaImage}/>\r\n                        <div className={style.loginInputBlock}>\r\n                            <label className={style.loginLabel} htmlFor=\"rememberMe\">\r\n                                Enter symbols from image\r\n                            </label>\r\n                            <Field\r\n                                inputClassName={style.loginFormInput}\r\n                                component={Input}\r\n                                type=\"text\"\r\n                                name=\"captcha\"\r\n                                validate={[required]}\r\n                                errorSignSide='right'\r\n                            />\r\n                        </div>\r\n                    </div> : ''\r\n            }\r\n            <div className={style.loginInputBlock}>\r\n                <button className={style.loginSubmitButton} type=\"submit\">\r\n                    Sign in\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nlet LoginReduxForm = reduxForm({\r\n    form: \"login\",\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.submitLogin(formData);\r\n    };\r\n\r\n    if (props.isAuth) return <Redirect to=\"/profile\" />\r\n\r\n    return (\r\n        <div className={style.loginPage}>\r\n            <div className={style.login}>\r\n                <h1 className={style.socialNetworkTitle}>MeesageMe</h1>\r\n                <h1 className={style.formTitle}>Login</h1>\r\n                <div className={style.formDescription}>Log into your account</div>\r\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import { connect } from 'react-redux';\r\nimport { setIsAuthThunkCreator } from '../../redux/authReducer';\r\nimport Login from './Login'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n        captchaUrl: state.authReducer.captchaUrl\r\n    }\r\n}\r\n\r\nconst actionCreators = {\r\n    submitLogin: setIsAuthThunkCreator\r\n}\r\n\r\nlet LoginContainer = connect(mapStateToProps, actionCreators)(Login);\r\n\r\nexport default LoginContainer;"],"sourceRoot":""}