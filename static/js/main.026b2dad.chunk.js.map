{"version":3,"sources":["components/Nav/Nav.module.css","serviceWorker.js","redux/followReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Nav/Nav.jsx","components/MyProfile/MyProfileStatus/MyProfileStatusWithHooks.jsx","components/MyProfile/MyProfileStatus/MyProfileStatusContainer.jsx","components/common/Contacts/Contacts.jsx","components/MyProfile/MyProfile.jsx","components/MyProfile/MyProfileContainer.jsx","redux/selectors/followSelector.js","components/Follow/User/User.jsx","components/Follow/Follow.jsx","components/Follow/FollowContainer.jsx","components/hoc/withSuspense.jsx","App.js","index.js","redux/userProfileReducer.js","components/Header/Header.module.css","components/common/Preloader/Preloader.jsx","redux/authReducer.js","redux/selectors/profileSelector.js","components/MyProfile/MyProfileStatus/MyProfileStatus.module.css","components/common/Contacts/Contacts.module.css","components/Follow/User/User.module.css","img/undefinedUser.png","components/MyProfile/MyProfile.module.css","components/common/Preloader/Preloader.module.css","api/api.js","components/hoc/withAuthRedirect.jsx","utils/helpers/helperObject.js","redux/usersPageReducer.js","redux/newsPageReducer.js","redux/messagesPageReducer.js","img/logo.png","img/loader.svg","components/Follow/Follow.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","SET_USERS","initialState","followData","followReducer","stateCopy","state","action","type","users","SET_INITIALIZED","initialized","appReducer","reducers","combineReducers","newsReducer","messagesReducer","usersReducer","userProfileReducer","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","props","onLogoutClick","onLogout","className","style","header","headerLogoBlock","src","logo","alt","title","loginBlock","isAuth","logoutButton","onClick","to","loginButton","HeaderContainer","unsetUser","this","userId","React","Component","actionCreators","unsetUserThunkCreator","connect","userData","Nav","nav","activeClassName","active","item","MyProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","activateStatusEditMode","statusBlock","userInfoTitle","statusTitle","autoFocus","value","onBlur","updateStatus","onChange","e","currentTarget","statusText","onDoubleClick","onTouchStart","undefined","updateUserStatusThunkCreator","MyProfileStatusContainer","getStatus","Contatcs","contacts","userContactsList","Object","keys","map","key","userContactsListItem","href","userContactslink","MyProfile","templateAbout","onAvatarChange","target","files","length","uploadPhoto","user","userImageBlock","profile","photos","large","userImage","undefinedUser","userAvatarInputBlock","htmlFor","userAvatarIcon","o","nChange","userAvatarInput","id","name","userInfoBlock","classnames","userInfoBlockItem","userFullnameBlock","userFullnameTitle","userFullname","fullName","userContactsBlock","Contacts","userContactsUnavailable","userAboutBlock","userAbout","aboutMe","MyProfileAPIContainer","file","initProfile","unsetUserProfile","init","Preloader","unsetUserProfileActionCreator","uploadPhotoThunkCreator","MyProfileContainer","withAuthRedirect","getId","getProfile","getFollowComponentUsers","User","avatar","userDesc","userName","addUser","Follow","follow","small","FollowAPIContainer","getUsers","count","page","dispatch","a","usersAPI","response","error","items","FollowContainer","withSuspense","Suspense","fallback","NewsContainer","lazy","UsersContainer","MessagesContainer","UserProfileContainer","LoginContainer","Settings","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","reason","initializeApp","addEventListener","removeEventListener","isInitialized","path","render","exact","from","checkAuthPromise","checkAuthThunkCreator","Promise","all","then","AppContainer","withRouter","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","SET_USER_PROFILE","UNSET_USER_PROFILE","SET_USER_STATUS","SET_INIT","SET_PHOTOS","userProfile","userStatus","setUserStatusActionCreator","getUserProfileThunkCreator","profileAPI","setUserInfoById","resultCode","reject","messages","data","saveProfileDataThunkCreator","formData","getState","saveProfileData","error_message","index","indexOf","contact_key","substring","toLowerCase","stopSubmit","_error","getUserStatusThunkCreator","preloader","loader","preloaderImage","SET_USER_DATA","UNSET_USER_DATA","TOGLE_IS_AUTH","SET_CAPTCHA_URL","email","login","captchaUrl","setUserActionCreator","payload","unsetUserActionCreator","setIsAuthActionCreator","authAPI","me","logout","setIsAuthThunkCreator","securityAPI","getCaptchaUrl","url","instance","axios","create","withCredentials","baseURL","headers","get","followUserById","post","unfollowUserById","delete","warn","put","image","FormData","append","password","rememberMe","captcha","RedirectComponent","updateObjectInArray","itemId","objPropName","newObjProp","parseInt","FOLLOW_USER","UNFOLLOW_USER","UNSET_USERS","SET_USERS_COUNT","SET_PAGE_SIZE","SET_PAGES_COUNT","SET_CURRENT_PAGE","IS_FETCHING","FOLLOWING_IN_PROGRESS","usersData","pageSize","totalUsers","pagesCount","pages","currentPage","isFetching","followingInProgress","followActionCreator","user_id","unfollowActionCreator","followingProgressActionCreator","progress","setUsersActionCreator","showMore","setTotalUsersActionCreator","setPageSizeActionCreator","size","setPagesCountActionCreator","setCurrentPageActionCreator","pageNum","setIsFetchingActionCreator","unsetUsersActionCreator","getUsersThunkCreator","Math","ceil","totalCount","toggleFollowThunkCreator","isFollow","toggleFollowUnfollow","bind","showMoreUsersThunkCreator","apiMethod","actionCreator","i","push","followed","filter","ADD_POST","DELETE_POST","postsData","postText","postPhoto","authorAvatar","authorName","newPostText","addPostActionCreator","newPost","p","post_id","ADD_NEW_MESSAGE","dialogsData","lastMessage","activeDialogMessagesData","author","addNewMessageCreator","newMessage","newMessageText"],"mappings":"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","file":"static/js/main.026b2dad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3A-Vq\",\"title\":\"Nav_title__3ZPaR\",\"item\":\"Nav_item__1h5o-\",\"active\":\"Nav_active__PnmBd\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import usersAPI from '../api/api';\r\n\r\nconst SET_USERS = 'messege-me/followReducer/SET-USERS';\r\n\r\n\r\nlet initialState = {\r\n    followData: []\r\n}\r\nconst followReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case SET_USERS: {\r\n            stateCopy = {\r\n                ...state,\r\n                followData: [...action.users]\r\n            }\r\n            break;\r\n        }\r\n        default:\r\n            stateCopy = {...state}\r\n            break;\r\n    }\r\n\r\n    return stateCopy;\r\n}\r\n/** ------Action creators----- */\r\nconst setUsersActionCreator = (users) => {\r\n    let action = {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n    return action;\r\n}\r\n/** -------------------------- */\r\n\r\n/** ------Thunk creators creators-----*/\r\nexport const getUsersThunkCreator = (count, page) => async (dispatch) => {\r\n    let response = await usersAPI.getUsers(count, page);\r\n\r\n    if (response.error === null) {\r\n        dispatch(setUsersActionCreator(response.items));\r\n    }\r\n} \r\n/** -------------------------- */\r\n\r\n\r\nexport default followReducer;","import { checkAuthThunkCreator } from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = 'messege-me/appReducer/SET-INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED: {\r\n            stateCopy = {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n            break;\r\n        }\r\n        default: \r\n            stateCopy = {...state}\r\n    }\r\n\r\n    return stateCopy;\r\n}\r\n\r\nexport const setInitializedCreator = () => {\r\n    let action = {\r\n        type: SET_INITIALIZED,\r\n    }\r\n    return action;\r\n}\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let checkAuthPromise =  dispatch(checkAuthThunkCreator());\r\n\r\n    Promise.all([checkAuthPromise]).then( () => {\r\n        dispatch(setInitializedCreator());\r\n    })\r\n}\r\n\r\nexport default appReducer;","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport newsReducer from \"./newsPageReducer\";\r\nimport messagesReducer from \"./messagesPageReducer\";\r\nimport followReducer from \"./followReducer\";\r\nimport usersReducer from \"./usersPageReducer\";\r\nimport userProfileReducer from \"./userProfileReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport appReducer from \"./appReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    appReducer,\r\n    newsReducer,\r\n    messagesReducer,\r\n    followReducer,\r\n    usersReducer,\r\n    userProfileReducer,\r\n    authReducer,\r\n    form: formReducer,\r\n});\r\n\r\n/** Подключение REDUX DevTools */\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from \"./Header.module.css\";\r\nimport logo from '../../img/logo.png';\r\n\r\nlet Header = (props) => {\r\n\r\n    const onLogoutClick = () => {\r\n        props.onLogout();\r\n    }\r\n\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.headerLogoBlock}>\r\n                <img\r\n                    src={logo}\r\n                    alt=\"Logo\"\r\n                />\r\n                <h1 className={style.title}>\r\n                    MessageMe\r\n                </h1>\r\n            </div>\r\n            <div className={style.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                    ? \r\n                        <button className={style.logoutButton} onClick={onLogoutClick}>\r\n                            Logout\r\n                        </button>\r\n                    : \r\n                        <NavLink to='/login'>\r\n                            <button className={style.loginButton} onClick={onLogoutClick}>\r\n                                Login\r\n                            </button>\r\n                        </NavLink>\r\n\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { unsetUserThunkCreator } from '../../redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component \r\n{\r\n    onLogout = () => {\r\n        this.props.unsetUser();\r\n    }\r\n\r\n    render () {\r\n        return <Header {...this.props} userId={this.props.userId} onLogout={this.onLogout}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n        userData: state.authReducer.userData,\r\n    }\r\n}\r\n\r\nlet actionCreators = {\r\n    unsetUser: unsetUserThunkCreator,\r\n}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(HeaderContainer);\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from \"./Nav.module.css\";\r\n\r\nlet Nav = () => {\r\n    return (\r\n        <nav className={style.nav}>\r\n            <h4 className={style.title}>Menu</h4>\r\n            <ul>\r\n                <li>\r\n                    <NavLink\r\n                        activeClassName={style.active}\r\n                        to=\"/profile\"\r\n                        className={style.item}\r\n                    >\r\n                        My Profile\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink\r\n                        className={style.item}\r\n                        to=\"/messages\"\r\n                        activeClassName={style.active}\r\n                    >\r\n                        Messages\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink\r\n                        className={style.item}\r\n                        to=\"/news\"\r\n                        activeClassName={style.active}\r\n                    >\r\n                        News\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink\r\n                        className={style.item}\r\n                        to=\"/music\"\r\n                        activeClassName={style.active}\r\n                    >\r\n                        Music\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink\r\n                        to=\"/settings\"\r\n                        className={style.item}\r\n                        activeClassName={style.active}\r\n                    >\r\n                        Settings\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink\r\n                        to=\"/users\"\r\n                        className={style.item}\r\n                        activeClassName={style.active}\r\n                    >\r\n                        Users\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\nexport default Nav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport style from \"./MyProfileStatus.module.css\";\r\n\r\nconst MyProfileStatusWithHooks = (props) => {\r\n    \r\n    /** destructure assignment */\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n\r\n    const activateStatusEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const diactivateStatusEditMode = () => {\r\n        props.updateStatus(status);\r\n        setEditMode(false);\r\n    }\r\n\r\n    const onChangeStatusText = (e) => {\r\n        let status = e.currentTarget.value;\r\n        setStatus(status);\r\n    }\r\n\r\n    return (\r\n        <div className={style.statusBlock}>\r\n            <h3 className={style.userInfoTitle + \" \" + style.statusTitle}>\r\n                Status\r\n            </h3>\r\n            {editMode ? (\r\n                <div>\r\n                    <input \r\n                        type=\"text\" \r\n                        autoFocus={true} \r\n                        value={status}\r\n                        onBlur={diactivateStatusEditMode}\r\n                        onChange={onChangeStatusText}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <span \r\n                    className={style.statusText}\r\n                    onDoubleClick={activateStatusEditMode}\r\n                    onTouchStart={activateStatusEditMode}\r\n                >\r\n                    {props.status !== \"\" && props.status !== undefined\r\n                        ? props.status\r\n                        : \"No status\"}\r\n                </span>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyProfileStatusWithHooks;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { getStatus } from \"../../../redux/selectors/profileSelector\";\r\nimport { updateUserStatusThunkCreator } from \"../../../redux/userProfileReducer\";\r\nimport MyProfileStatusWithHooks from \"./MyProfileStatusWithHooks\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: getStatus(state),\r\n    }\r\n}\r\nconst actionCreators = {\r\n    updateStatus: updateUserStatusThunkCreator,\r\n}\r\n\r\nlet MyProfileStatusContainer = compose(\r\n    connect(mapStateToProps, actionCreators)\r\n)(MyProfileStatusWithHooks);\r\n\r\nexport default MyProfileStatusContainer;","import React from 'react';\r\nimport style from './Contacts.module.css';\r\n\r\nconst Contatcs = ({contacts}) => {\r\n    return (\r\n        <ul className={style.userContactsList}>\r\n        {\r\n            Object.keys(contacts).map( key => {\r\n                if (contacts[key] !== '' && contacts[key] !== null) {\r\n                    return (\r\n                        <li className={style.userContactsListItem}>\r\n                            <a href={contacts[key]} className={style.userContactslink + ' ' + style[key]}>{key}</a>\r\n                        </li>\r\n                    );\r\n                }\r\n                else return '';\r\n            })\r\n        }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Contatcs;","import React from 'react';\r\nimport style from './MyProfile.module.css';\r\nimport undefinedUser from '../../img/undefinedUser.png'\r\nimport MyProfileStatusContainer from './MyProfileStatus/MyProfileStatusContainer';\r\nimport classnames from 'classnames';\r\nimport Contacts from '../common/Contacts/Contacts';\r\n\r\nclass MyProfile extends React.Component\r\n{    \r\n\r\n    templateAbout = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tempus libero vel massa vulputate congue. Aenean commodo sem vitae dolor varius, in cursus est semper. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Maecenas nulla augue, pretium in metus eu, gravida auctor quam. Donec et sem metus. Nulla sit amet eros sem. Sed vel lacinia est, id laoreet erat.';\r\n\r\n    onAvatarChange = (e) => {\r\n        if (e.target.files.length) {\r\n            this.props.uploadPhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.user}>\r\n                <div className={style.userImageBlock}>\r\n                    {\r\n                        this.props.profile.photos.large\r\n                        ? <img src={this.props.profile.photos.large} alt=\"\" className={style.userImage} />\r\n                        : <img src={undefinedUser} alt=\"\" className={style.userImage} />\r\n                    }\r\n                    <div className={style.userAvatarInputBlock}>\r\n                        <label htmlFor=\"avatarInput\" className={style.userAvatarIcon}>\r\n                            ↻\r\n                            <input \r\n                                type=\"file\" o\r\n                                nChange={this.onAvatarChange} \r\n                                className={style.userAvatarInput} \r\n                                id=\"avatarInput\" \r\n                                name=\"avatarInput\"\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className={style.userInfoBlock}>\r\n                    <div className={classnames(style.userInfoBlockItem, style.userFullnameBlock)}>\r\n                        <h3 className={style.userInfoTitle + ' ' + style.userFullnameTitle}>\r\n                            Fullname\r\n                        </h3>\r\n                        <span className={style.userFullname}>\r\n                            {this.props.profile.fullName}\r\n                        </span>\r\n                        <MyProfileStatusContainer userId={this.props.profile.userId}/>\r\n                    </div>\r\n                    <div className={classnames(style.userInfoBlockItem)}>\r\n                        <h3 className={style.userInfoTitle + ' ' + style.userFullnameTitle}>\r\n                            Contacts\r\n                        </h3>\r\n                        <div className={style.userInfoBlockItem + ' ' + style.userContactsBlock}>\r\n                            {\r\n                                Object.keys(this.props.profile.contacts).length !== 0 \r\n                                ? \r\n                                    <Contacts contacts={this.props.profile.contacts}/>\r\n                                :\r\n                                    <span className={style.userContactsUnavailable}>\r\n                                        User has no available contatcs\r\n                                    </span> \r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={style.userAboutBlock}>\r\n                    <p className={style.userAbout}>\r\n                        {\r\n                            this.props.profile.aboutMe\r\n                            ? this.props.profile.aboutMe\r\n                            : this.templateAbout\r\n                        }\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default MyProfile;","import React from 'react';\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport MyProfile from \"./MyProfile\";\r\nimport withAuthRedirect from \"../hoc/withAuthRedirect\";\r\nimport {\r\n    initProfile,\r\n    unsetUserProfileActionCreator,\r\n    uploadPhotoThunkCreator,\r\n} from '../../redux/userProfileReducer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { getId, getProfile } from '../../redux/selectors/profileSelector';\r\n\r\nclass MyProfileAPIContainer extends React.Component \r\n{\r\n    componentDidMount() {\r\n        this.props.initProfile(this.props.id);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.props.unsetUserProfile();\r\n    }\r\n\r\n    uploadPhoto = (file) => {\r\n        this.props.uploadPhoto(file);\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.init) {\r\n            return <Preloader />;\r\n        }\r\n        return (\r\n            <MyProfile \r\n                {...this.props} \r\n                profile={this.props.profile} \r\n                uploadPhoto={this.uploadPhoto}\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: getId(state),\r\n        profile: getProfile(state),\r\n        init: state.userProfileReducer.init,\r\n    };\r\n};\r\n\r\nconst actionCreators = {\r\n    unsetUserProfile: unsetUserProfileActionCreator,\r\n    initProfile: initProfile,\r\n    uploadPhoto: uploadPhotoThunkCreator,\r\n};\r\n\r\nlet MyProfileContainer = compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, actionCreators),\r\n)(MyProfileAPIContainer);\r\n\r\nexport default MyProfileContainer;\r\n","export const getFollowComponentUsers = (state) => {\r\n    return state.followReducer.followData;\r\n}","import React from \"react\";\r\nimport style from \"./User.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport undefinedUser from '../../../img/undefinedUser.png';\r\n\r\nlet User = (props) => {\r\n    return (\r\n        <div className={style.user}>\r\n            <NavLink to={'/user/' + props.id} userId={props.id}>\r\n\r\n            {\r\n                props.avatar\r\n                ? <img src={props.avatar} alt=\"\" />\r\n                : <img src={undefinedUser} alt=\"\"/>\r\n            }\r\n            </NavLink>\r\n            <div className={style.userDesc}>\r\n                <span className={style.userName}>{props.name}</span>\r\n                <span className={style.addUser}>Follow</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default User;\r\n","import React from \"react\";\r\nimport style from \"./Follow.module.css\";\r\nimport User from \"./User/User\";\r\n\r\n\r\nlet Follow = (props) => {\r\n\r\n    let follow = props.followData\r\n                    .map(user => \r\n                        <User\r\n                            id={user.id}\r\n                            name={user.name}\r\n                            avatar={user.photos.small}\r\n                            key={user.id}\r\n                        />\r\n                    );\r\n    return (\r\n        <div className={style.follow}>\r\n            <h4>Who to Follow</h4>\r\n            {follow}\r\n        </div>\r\n    );\r\n};\r\nexport default Follow;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUsersThunkCreator } from \"../../redux/followReducer\";\r\nimport { getFollowComponentUsers } from \"../../redux/selectors/followSelector\";\r\nimport Follow from \"./Follow\";\r\n\r\nclass FollowAPIContainer extends React.Component \r\n{\r\n    componentDidMount() {\r\n        this.props.getUsers(3, 1);\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {\r\n                    this.props.followData.length > 0 \r\n                    ? <Follow followData={this.props.followData} /> \r\n                    : ''\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        followData: getFollowComponentUsers(state),\r\n    }\r\n}\r\nlet actionCreators = {\r\n    getUsers: getUsersThunkCreator\r\n}\r\n\r\nconst FollowContainer = connect(mapStateToProps, actionCreators)(FollowAPIContainer);\r\n\r\nexport default FollowContainer;\r\n","import React from \"react\";\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nconst withSuspense = (Component) => (props) => {\r\n    return (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </React.Suspense>  \r\n    );\r\n};\r\n\r\nexport default withSuspense;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport store from \"./redux/reduxStore\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Nav from \"./components/Nav/Nav\";\nimport MyProfileContainer from \"./components/MyProfile/MyProfileContainer\";\nimport FollowContainer from \"./components/Follow/FollowContainer\";\nimport { Route, withRouter, HashRouter, Switch, Redirect } from \"react-router-dom\";\nimport { Component } from \"react\";\nimport { connect, Provider } from \"react-redux\";\nimport { initializeApp } from \"./redux/appReducer\";\nimport { compose } from \"redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport withSuspense from \"./components/hoc/withSuspense\";\n\n/** Lazy load */\nconst NewsContainer = React.lazy(() => import(\"./components/News/NewsContainer\"));\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\nconst MessagesContainer = React.lazy(() => import(\"./components/Messages/MessagesContainer\"));\nconst UserProfileContainer = React.lazy(() => import(\"./components/UserProfile/UserProfileContainer\"));\nconst LoginContainer = React.lazy(() => import(\"./components/Login/LoginContainer\"));\nconst Settings = React.lazy(() => import(\"./components/Settings/Settings\"));\n\n\nclass App extends Component {\n\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\n        alert(promiseRejectionEvent.reason);\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.isInitialized) {\n            return <Preloader />;\n        }\n        return (\n            <Switch>\n                <Route path=\"/login\" render={withSuspense(LoginContainer)} />\n                <Route path=\"*\" render={() => {\n                    return (\n                        <div>\n                            <div className=\"header-background\">\n                                <div className=\"wrapper wrapper-header\">\n                                    <HeaderContainer />\n                                </div>\n                            </div>\n                            <div className=\"wrapper wrapper-content\">\n                                <aside className=\"sidebar\">\n                                    <Nav />\n                                    <FollowContainer />\n                                </aside>\n                                <div className=\"content\">\n                                    <Switch>\n                                        <Redirect exact from='/' to='/profile' />\n                                        <Route path=\"/news\" render={withSuspense(NewsContainer)}/>\n                                        <Route path=\"/settings\" render={withSuspense(Settings)}/>\n                                        <Route\n                                            path=\"/messages\"\n                                            render={withSuspense(MessagesContainer)}/>\n                                        <Route\n                                            path=\"/users\"\n                                            render={withSuspense(UsersContainer)} />\n                                        <Route\n                                            path=\"/user/:userId\"\n                                            render={withSuspense(UserProfileContainer)}/>\n                                        <Route\n                                            path=\"/profile\"\n                                            render={() => <MyProfileContainer />}\n                                        />\n                                        <Route path=\"*\" render={() => <div>404 NOT FOUND</div>} />\n                                    </Switch>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                }} />\n            </Switch>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isInitialized: state.appReducer.initialized,\n        isAuth: state.authReducer.isAuth,\n    }\n}\n\nlet actionCreators = {\n    initializeApp: initializeApp,\n}\n\nconst AppContainer =  compose(\n    withRouter, \n    connect(mapStateToProps, actionCreators),\n)(App);\n\nconst MainApp = (props) => {\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <AppContainer store={store} />\n            </HashRouter>\n        </Provider>\n    )\n}\n\nexport default MainApp;\n","import * as serviceWorker from \"./serviceWorker\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport MainApp from \"./App\";\n\nReactDOM.render(<MainApp/>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {profileAPI} from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\n\r\nconst SET_USER_PROFILE = 'message-me/userProfile/SET-USER-PROFILE';\r\nconst UNSET_USER_PROFILE = 'message-me/userProfile/UNSET-USER-PROFILE';\r\nconst SET_USER_STATUS = 'message-me/userProfile/SET-USER-STATUS';\r\nconst SET_INIT = 'message-me/userProfile/SET-INIT-PROFILE';\r\nconst SET_PHOTOS = 'message-me/userProfile/SET-PHOTOS';\r\n\r\n\r\nlet initialState = {\r\n    userProfile: null,\r\n    userStatus: \"\",\r\n    init: false,\r\n}\r\n\r\nconst userProfileReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case SET_INIT: {\r\n            stateCopy = {\r\n                ...state,\r\n                userProfile: {...state.userProfile},\r\n                init: true,\r\n            }\r\n            break;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            stateCopy = {\r\n                ...state,\r\n                userProfile: {...action.userProfile},\r\n            }\r\n            break;\r\n        }\r\n        case UNSET_USER_PROFILE: {\r\n            stateCopy = {\r\n                ...state,\r\n                userProfile: null,\r\n                userStatus: \"\",\r\n                init: false,\r\n            }\r\n            break;\r\n        }\r\n        case SET_USER_STATUS: {\r\n            stateCopy = {\r\n                ...state,\r\n                userStatus: action.status,\r\n            }\r\n            break;\r\n        }\r\n        case SET_PHOTOS: {\r\n            stateCopy = {\r\n                ...state,\r\n                userProfile: {...state.userProfile, photos: action.photos},\r\n            }\r\n            break;\r\n        }\r\n        default: \r\n            stateCopy = {...state};\r\n    }\r\n\r\n\r\n    return stateCopy;\r\n}\r\n\r\n/** --------Action creators-------- */\r\nexport const setUserProfileActionCreator = (userProfile) => {\r\n    let action = {\r\n        type: SET_USER_PROFILE,\r\n        userProfile: userProfile,\r\n    }\r\n    return action;\r\n}\r\nexport const unsetUserProfileActionCreator = () => {\r\n    let action = {\r\n        type: UNSET_USER_PROFILE,\r\n    }\r\n    return action;\r\n}\r\nexport const setUserStatusActionCreator = (status) => {\r\n    let action = {\r\n        type: SET_USER_STATUS,\r\n        status: status,\r\n    }\r\n    return action;\r\n}\r\nconst setInitActionCreator = () => {\r\n    let action = {\r\n        type: SET_INIT,\r\n    }\r\n    return action;\r\n}\r\nconst uploadPhotoActionCreator = (photos) => {\r\n    let action = {\r\n        type: SET_PHOTOS,\r\n        photos: photos,\r\n    }\r\n    return action;\r\n}\r\n/** ------------------------------ */\r\n\r\n/** -------------Thunk Creators------------- */\r\nconst getUserProfileThunkCreator = (userId) => async (dispatch) => {\r\n    let response =  await profileAPI.setUserInfoById(userId);\r\n    dispatch(setUserProfileActionCreator(response));\r\n} \r\n\r\nconst getUserStatusThunkCreator = (userId) => async (dispatch) => {\r\n    let response =  await profileAPI.getStatus(userId);\r\n    dispatch(setUserStatusActionCreator(response));\r\n} \r\n\r\nexport const updateUserStatusThunkCreator = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.resultCode === 0) {\r\n        dispatch(setUserStatusActionCreator(status));\r\n    }\r\n    else {\r\n        Promise.reject(response.messages[0]);\r\n    }\r\n} \r\nexport const uploadPhotoThunkCreator = (file) => async (dispatch) => {\r\n    let response = await profileAPI.uploadPhoto(file);\r\n    if (response.resultCode === 0) {\r\n        dispatch(uploadPhotoActionCreator(response.data.photos));\r\n    }\r\n}\r\nexport const saveProfileDataThunkCreator = (formData) => async (dispatch, getState) => {\r\n    const userId = getState().authReducer.userData.id;\r\n    const response = await profileAPI.saveProfileData(formData);\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(getUserProfileThunkCreator(userId));\r\n    }\r\n    else {\r\n        let error_message = response.messages.length > 0 ? response.messages[0] : 'Invalid form data';\r\n        let index = error_message.indexOf('Contacts->');\r\n        let action = {};\r\n        if (index !== -1) {\r\n            let contact_key = error_message.substring(index + 10, error_message.length - 1).toLowerCase();\r\n            action = stopSubmit('myprofileSettings', {'contacts': {[contact_key]: error_message} } );\r\n        }\r\n        else {\r\n            action = stopSubmit('myprofileSettings', {_error: error_message});\r\n        }\r\n        dispatch(action);\r\n    }\r\n}\r\n/** ---------------------------------------- */\r\n\r\n/** --------------Init-------------- */\r\nexport const initProfile = (userId) => (dispatch) => {\r\n    let profile =  dispatch(getUserProfileThunkCreator(userId));\r\n    let status =  dispatch(getUserStatusThunkCreator(userId));\r\n\r\n    Promise.all([profile, status]).then( () => {\r\n        dispatch(setInitActionCreator());\r\n    })\r\n}\r\n/** -------------------------------- */\r\n\r\nexport default userProfileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__17mBi\",\"title\":\"Header_title__2egTu\",\"headerLogoBlock\":\"Header_headerLogoBlock__34PFJ\",\"logoutButton\":\"Header_logoutButton__2O5Cs\",\"loginButton\":\"Header_loginButton__1Tup7\"};","import React from 'react';\r\nimport style from './Preloader.module.css'\r\nimport loader from '../../../img/loader.svg';\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={style.preloader}>\r\n            <img\r\n                src={loader}\r\n                alt=\"Loading...\"\r\n                className={style.preloaderImage}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n","import { stopSubmit } from 'redux-form';\r\nimport {authAPI, securityAPI} from '../api/api';\r\n\r\nconst SET_USER_DATA = 'message-me/authReducer/SET-USER-DATA';\r\nconst UNSET_USER_DATA = 'message-me/authReducer/UNSET-USER-DATA';\r\nconst TOGLE_IS_AUTH = 'message-me/authReducer/TOGLE-IS-AUTH';\r\nconst SET_CAPTCHA_URL = 'message-me/authReducer/SET-CAPTCHA-URL';\r\n\r\n\r\nlet initialState = {\r\n    userData: {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n        captchaUrl: null,\r\n    },\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            stateCopy = {\r\n                ...state,\r\n                userData: {...action.payload},\r\n            }\r\n            break;\r\n        }\r\n        case UNSET_USER_DATA: {\r\n            stateCopy = {\r\n                ...state,\r\n                userData: {...action.payload},\r\n            }\r\n            break;\r\n        }\r\n        case TOGLE_IS_AUTH: {\r\n            stateCopy = {\r\n                ...state,\r\n                isAuth: action.isAuth,\r\n            }\r\n            break;\r\n        }\r\n        case SET_CAPTCHA_URL: {\r\n            stateCopy = {\r\n                ...state,\r\n                captchaUrl: action.url,\r\n            }\r\n            break;\r\n        }\r\n        default: \r\n            stateCopy = {...state}\r\n    }\r\n\r\n    return stateCopy;\r\n}\r\n\r\n/** -------Action creators--------- */\r\nexport const setUserActionCreator = (payload) => {\r\n    let action = {\r\n        type: SET_USER_DATA,\r\n        payload: payload,\r\n    }\r\n    return action;\r\n}\r\nexport const unsetUserActionCreator = (payload) => {\r\n    let action = {\r\n        type: UNSET_USER_DATA,\r\n        payload: payload,\r\n    }\r\n    return action;\r\n}\r\n\r\nexport const setIsAuthActionCreator = (isAuth) => {\r\n    let action = {\r\n        type: TOGLE_IS_AUTH,\r\n        isAuth: isAuth,\r\n    }\r\n    return action;\r\n}\r\n\r\nconst setCaptchaUrlActionCreator = (url) => {\r\n    let action = {\r\n        type: SET_CAPTCHA_URL,\r\n        url: url,\r\n    }\r\n    return action;\r\n}\r\n/** --------------------------------- */\r\n\r\n/** -------Thunk creators--------- */\r\nexport const checkAuthThunkCreator = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(setUserActionCreator(response.data));\r\n        dispatch(setIsAuthActionCreator(true));\r\n    }\r\n}\r\n\r\nexport const unsetUserThunkCreator = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.resultCode === 0) {\r\n        let payload = {\r\n            id: null,\r\n            email: null,\r\n            login: null,\r\n            captchaUrl: null,\r\n        }\r\n        dispatch(unsetUserActionCreator(payload));\r\n        dispatch(setIsAuthActionCreator(false));\r\n    }\r\n}\r\nconst getCaptchaUrlThunkCreator = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.url;\r\n\r\n    dispatch(setCaptchaUrlActionCreator(captchaUrl));\r\n}\r\n\r\nexport const setIsAuthThunkCreator = (formData) => async (dispatch) => {\r\n    let response = await authAPI.login(formData);\r\n    if (response.resultCode === 0) {\r\n        let payload = {\r\n            id: response.data.userId,\r\n            email: null,\r\n            login: null,\r\n        }\r\n        dispatch(setUserActionCreator(payload));\r\n        dispatch(setIsAuthActionCreator(true));\r\n    }\r\n    else {\r\n        /** Неверный код капчи */\r\n        if (response.resultCode === 10) {\r\n            dispatch(getCaptchaUrlThunkCreator());\r\n        }\r\n\r\n        let error_message = response.messages.length > 0 ? response.messages[0] : 'Email or password is incorrect';\r\n        let action = stopSubmit('login', {_error: error_message});\r\n        dispatch(action);\r\n    }\r\n}\r\n/** --------------------------------- */\r\n\r\nexport default authReducer;","export const getId = (state) => {\r\n    return state.authReducer.userData.id;\r\n}\r\nexport const getProfile = (state) => {\r\n    return state.userProfileReducer.userProfile;\r\n}\r\nexport const getStatus = (state) => {\r\n    return state.userProfileReducer.userStatus;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBlock\":\"MyProfileStatus_statusBlock__wgbWg\",\"statusText\":\"MyProfileStatus_statusText__v4j7d\",\"userInfoTitle\":\"MyProfileStatus_userInfoTitle__6edsK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userContactsList\":\"Contacts_userContactsList__3bRvJ\",\"userContactslink\":\"Contacts_userContactslink__m29A-\",\"github\":\"Contacts_github__nme50\",\"vk\":\"Contacts_vk__3Mgbh\",\"facebook\":\"Contacts_facebook__1CSVj\",\"twitter\":\"Contacts_twitter__FWx9d\",\"youtube\":\"Contacts_youtube__kAkXE\",\"website\":\"Contacts_website__1RG0z\",\"mainLink\":\"Contacts_mainLink__3ECWB\",\"instagram\":\"Contacts_instagram__9P9Us\",\"userContactsListItem\":\"Contacts_userContactsListItem__11cCq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3zQMh\",\"userName\":\"User_userName__1w6dL\",\"addUser\":\"User_addUser__sZHNF\",\"userDesc\":\"User_userDesc__3u-6N\"};","module.exports = __webpack_public_path__ + \"static/media/undefinedUser.d961d73a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"MyProfile_user__M8ATN\",\"userImageBlock\":\"MyProfile_userImageBlock__2VRAV\",\"userImage\":\"MyProfile_userImage__36zO5\",\"userAvatarInputBlock\":\"MyProfile_userAvatarInputBlock__2kBud\",\"userAvatarIcon\":\"MyProfile_userAvatarIcon__2Yjvx\",\"userAvatarInput\":\"MyProfile_userAvatarInput__2ugAf\",\"userInfoBlock\":\"MyProfile_userInfoBlock__12OIo\",\"userInfoBlockItem\":\"MyProfile_userInfoBlockItem__c4dbA\",\"userFullnameBlock\":\"MyProfile_userFullnameBlock__i0z10\",\"userFullname\":\"MyProfile_userFullname__3MUOQ\",\"userFullnameTitle\":\"MyProfile_userFullnameTitle__3-95p\",\"userInfoTitle\":\"MyProfile_userInfoTitle__1-8Nb\",\"userAboutBlock\":\"MyProfile_userAboutBlock__1mnQ-\",\"userAbout\":\"MyProfile_userAbout__6rG1c\",\"userContactsUnavailable\":\"MyProfile_userContactsUnavailable__3OtSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationListItemCurrent\":\"Preloader_paginationListItemCurrent__2MvIc\",\"preloader\":\"Preloader_preloader__3x4U7\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '243c72f1-6008-4b8d-8dff-b9a03a32b432',\r\n    },\r\n})\r\n\r\nconst usersAPI = {\r\n    getUsers(count = 10, page = 1) {\r\n        return instance.get(`users?count=${count}&page=${page}`).then( response => response.data);\r\n    },\r\n    followUserById(userId)  {\r\n        return instance.post(`follow/${userId}`).then( response => response.data);\r\n    },\r\n    unfollowUserById(userId) {\r\n        return instance.delete(`follow/${userId}`).then( response => response.data);\r\n    },\r\n    setUserInfoById(userId) {\r\n        console.warn('Method deprecated! Use profileAPI method to set user info.');\r\n        return profileAPI.setUserInfoById(userId);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    setUserInfoById(userId) {\r\n        return instance.get(`profile/${userId}`).then( response => response.data);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`).then( response => response.data);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status }).then( response => response.data);\r\n    },\r\n    uploadPhoto(image) {\r\n        const formData = new FormData();\r\n        formData.append('image', image);\r\n        \r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then( response => response.data);\r\n    },\r\n    saveProfileData(formData) {\r\n        return instance.put(`profile`, formData).then( response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me').then( response => response.data);\r\n    },\r\n    login(formData) {\r\n        return instance.post('auth/login', {\r\n            email: formData.email,\r\n            password: formData.password,\r\n            rememberMe: formData.rememberMe,\r\n            captcha: formData.captcha ? formData.captcha : false,\r\n        }).then( response => response.data);\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login').then( response => response.data);\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url').then( response => response.data);\r\n    },\r\n}\r\n\r\nexport default usersAPI;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n            return <Component {...this.props} isAuth={this.props.isAuth} userData={this.props.userData}/>;\r\n        }\r\n    };\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.authReducer.isAuth,\r\n            userData: state.authReducer.userData,\r\n        }\r\n    };\r\n    let actionCreators = {};\r\n\r\n    let ConnectedRedirectComponent = connect(\r\n        mapStateToProps,\r\n        actionCreators\r\n    )(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProp) => {\r\n    return items.map( item => {\r\n        if (item[objPropName] === parseInt(itemId)) {\r\n            let itemCopy = {\r\n                ...item,\r\n                ...newObjProp\r\n            };\r\n            return itemCopy;\r\n        }\r\n        return item;\r\n    })\r\n}","import usersAPI from '../api/api';\r\nimport { updateObjectInArray } from '../utils/helpers/helperObject';\r\n\r\nconst FOLLOW_USER = \"message-me/usersReducer/FOLLOW-USER\";\r\nconst UNFOLLOW_USER = \"message-me/usersReducer/UNFOLLOW-USER\";\r\nconst SET_USERS = \"message-me/usersReducer/SET-USERS\";\r\nconst UNSET_USERS = \"message-me/usersReducer/UNSET-USERS\";\r\nconst SET_USERS_COUNT = \"message-me/usersReducer/SET-USERS-COUNT\";\r\nconst SET_PAGE_SIZE = \"message-me/usersReducer/SET-PAGE-SIZE\";\r\nconst SET_PAGES_COUNT = \"message-me/usersReducer/SET-PAGES-COUNT\";\r\nconst SET_CURRENT_PAGE = \"message-me/usersReducer/CHANGE-CURRENT-PAGE\";\r\nconst IS_FETCHING = \"message-me/usersReducer/IS-FETCHING\";\r\nconst FOLLOWING_IN_PROGRESS = \"message-me/usersReducer/FOLLOWING-IN-PROGRESS\";\r\n\r\nlet initialState = {\r\n    usersData: [],\r\n    pageSize: 10,\r\n    totalUsers: 0,\r\n    pagesCount: 0,\r\n    pages: [1],\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case SET_USERS: {\r\n\r\n            if (action.showMore) {\r\n                stateCopy = {\r\n                    ...state,\r\n                    usersData: [ ...state.usersData, ...action.users],\r\n                };\r\n            }\r\n            else {\r\n                stateCopy = {\r\n                    ...state,\r\n                    usersData: [...action.users],\r\n                };\r\n            }\r\n            break;\r\n        }\r\n        case UNSET_USERS: {\r\n            stateCopy = {\r\n                ...state,\r\n                usersData: [],\r\n                currentPage: 1\r\n            };\r\n            break;\r\n        }\r\n        case SET_USERS_COUNT: {\r\n            stateCopy = {\r\n                ...state,\r\n                totalUsers: action.count\r\n            };\r\n\r\n            break;\r\n        }\r\n        case SET_PAGE_SIZE: {\r\n            stateCopy = {\r\n                ...state,\r\n                pageSize: action.size\r\n            };\r\n\r\n            break;\r\n        }\r\n        case SET_PAGES_COUNT: {\r\n\r\n            stateCopy = {\r\n                ...state,\r\n                pagesCount: action.count,\r\n                pages: [],\r\n            };\r\n\r\n            for (let i = 1; i <= action.count; i++) {\r\n                stateCopy.pages.push(i);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            stateCopy = {\r\n                ...state,\r\n                currentPage: action.pageNum\r\n            };\r\n\r\n            break;\r\n        }\r\n        case IS_FETCHING: {\r\n            stateCopy = {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n\r\n            break;\r\n        }\r\n        case FOLLOW_USER: {\r\n            stateCopy = {\r\n                ...state,\r\n                usersData: updateObjectInArray(state.usersData, action.user_id, 'id', {followed: true}),\r\n            };\r\n\r\n            break;\r\n        }\r\n        case UNFOLLOW_USER: {\r\n            stateCopy = {\r\n                ...state,\r\n                usersData: updateObjectInArray(state.usersData, action.user_id, 'id', {followed: false}),\r\n            };\r\n\r\n            break;\r\n        }\r\n        case FOLLOWING_IN_PROGRESS: {\r\n            stateCopy = {\r\n                ...state,\r\n                followingInProgress: action.progress \r\n                ? [...state.followingInProgress, action.user_id]\r\n                : state.followingInProgress.filter( id => id !== action.user_id)\r\n            };\r\n\r\n            break;\r\n        }\r\n        default: {\r\n            stateCopy = { ...state };\r\n            break;\r\n        }\r\n    }\r\n\r\n    return stateCopy;\r\n};\r\n\r\n/** ---------------Action creators--------------- */\r\nexport const followActionCreator = (user_id) => {\r\n    let action = {\r\n        type: FOLLOW_USER,\r\n        user_id: user_id,\r\n    };\r\n    return action;\r\n};\r\nexport const unfollowActionCreator = (user_id) => {\r\n    let action = {\r\n        type: UNFOLLOW_USER,\r\n        user_id: user_id,\r\n    };\r\n    return action;\r\n};\r\nexport const followingProgressActionCreator = (user_id, progress) => {\r\n    let action = {\r\n        type: FOLLOWING_IN_PROGRESS,\r\n        progress: progress,\r\n        user_id: user_id,\r\n    };\r\n    return action;\r\n};\r\nexport const setUsersActionCreator = (users, showMore = false) => {\r\n    let action = {\r\n        type: SET_USERS,\r\n        users: users,\r\n        showMore: showMore,\r\n    };\r\n    return action;\r\n};\r\nexport const setTotalUsersActionCreator = (count) => {\r\n    let action = {\r\n        type: SET_USERS_COUNT,\r\n        count: count,\r\n    };\r\n    return action;\r\n};\r\nexport const setPageSizeActionCreator = (size) => {\r\n    let action = {\r\n        type: SET_PAGE_SIZE,\r\n        size: size,\r\n    };\r\n    return action;\r\n};\r\nexport const setPagesCountActionCreator = (count) => {\r\n    let action = {\r\n        type: SET_PAGES_COUNT,\r\n        count: count,\r\n    };\r\n    return action;\r\n};\r\nexport const setCurrentPageActionCreator = (pageNum) => {\r\n    let action = {\r\n        type: SET_CURRENT_PAGE,\r\n        pageNum: pageNum,\r\n    };\r\n    return action;\r\n};\r\nexport const setIsFetchingActionCreator = (isFetching) => {\r\n    let action = {\r\n        type: IS_FETCHING,\r\n        isFetching: isFetching,\r\n    };\r\n    return action;\r\n};\r\nexport const unsetUsersActionCreator = () => {\r\n    let action = {\r\n        type: UNSET_USERS\r\n    }\r\n    return action;\r\n}\r\n/** --------------------------------------------- */\r\n\r\n/** ---------------Thunk Creators---------------- */\r\nexport const getUsersThunkCreator = (count, page) => async (dispatch) => {\r\n\r\n    dispatch(setIsFetchingActionCreator(true));\r\n\r\n    let response = await usersAPI.getUsers(count, page);\r\n\r\n    if (response.error === null) {\r\n        dispatch(setUsersActionCreator(response.items));\r\n        dispatch(setPageSizeActionCreator(count));\r\n        dispatch(setPagesCountActionCreator(Math.ceil(response.totalCount / count)));\r\n        dispatch(setCurrentPageActionCreator(page));\r\n        dispatch(setIsFetchingActionCreator(false));\r\n    }\r\n} \r\nexport const toggleFollowThunkCreator = (user_id, isFollow) => {\r\n    if (isFollow) {\r\n        return async (dispatch) => {\r\n            toggleFollowUnfollow(dispatch, user_id, usersAPI.followUserById.bind(usersAPI), followActionCreator);\r\n        }\r\n    }\r\n    else {\r\n        return async (dispatch) => {\r\n            toggleFollowUnfollow(dispatch, user_id, usersAPI.unfollowUserById.bind(usersAPI), unfollowActionCreator);\r\n        } \r\n    }\r\n} \r\nexport const showMoreUsersThunkCreator = (count, currentPage) => async (dispatch) => {\r\n\r\n    let response = await usersAPI.getUsers(count, currentPage);\r\n\r\n    if (response.error === null) {\r\n        dispatch(setUsersActionCreator(response.items, true));\r\n        dispatch(setPageSizeActionCreator(count));\r\n        dispatch(setPagesCountActionCreator(Math.ceil(response.totalCount / count)));\r\n        dispatch(setCurrentPageActionCreator(currentPage));\r\n        dispatch(setIsFetchingActionCreator(false));\r\n    }\r\n}\r\n/** --------------------------------------------- */\r\n\r\n/** ----------Other helpfull functions---------- */\r\nconst toggleFollowUnfollow = async (dispatch, user_id, apiMethod, actionCreator) => {\r\n    dispatch(followingProgressActionCreator(user_id, true));\r\n\r\n    let response = await apiMethod(user_id);\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(user_id));\r\n        dispatch(followingProgressActionCreator(user_id, false));\r\n    }\r\n}\r\n/** ------------------------------------------- */\r\n\r\nexport default usersReducer;","const ADD_POST = 'message-me/newsPageReducer/ADD-POST';\r\nconst DELETE_POST = 'message-me/newsPageReducer/DELETE-POST';\r\n\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            postText: \"Post 1 Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat ex temporibus quia autem ab perferendis odio sunt magni, amet accusamus modi recusandae reiciendis, quae molestiae officiis iste nam aspernatur eos\",\r\n            postPhoto: \"https://themified.com/friend-finder/images/post-images/1.jpg\",\r\n            authorAvatar: \"https://themified.com/friend-finder/images/users/user-5.jpg\",\r\n            authorName: \"Alexis Clark\",\r\n        },\r\n        {\r\n            id: 2,\r\n            postText: \"Post 2 Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat ex temporibus quia autem ab perferendis odio sunt magni, amet accusamus modi recusandae reiciendis, quae molestiae officiis iste nam aspernatur eos\",\r\n            postPhoto: \"https://themified.com/friend-finder/images/post-images/2.jpg\",\r\n            authorAvatar: \"https://themified.com/friend-finder/images/users/user-3.jpg\",\r\n            authorName: \"Linda Lohan\",\r\n        },\r\n        {\r\n            id: 3,\r\n            postText: \"Post 3 Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat ex temporibus quia autem ab perferendis odio sunt magni, amet accusamus modi recusandae reiciendis, quae molestiae officiis iste nam aspernatur eos\",\r\n            postPhoto: \"https://themified.com/friend-finder/images/post-images/11.jpg\",\r\n            authorAvatar: \"https://themified.com/friend-finder/images/users/user-4.jpg\",\r\n            authorName: \"John Doe\",\r\n        },\r\n    ],\r\n    newPostText: 'Write what you wish',\r\n}\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n    \r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n\r\n            let newPost = {\r\n                id: 4,\r\n                postText: action.newPostText,\r\n                postPhoto: \"https://themified.com/friend-finder/images/post-images/11.jpg\",\r\n                authorAvatar: \"https://themified.com/friend-finder/images/users/user-4.jpg\",\r\n                authorName: \"My name\",\r\n            };\r\n\r\n            stateCopy = {\r\n                ...state,\r\n                newPostText: '',\r\n                postsData: [...state.postsData, newPost],\r\n            };\r\n\r\n            break;\r\n\r\n        }\r\n        case DELETE_POST: {\r\n            stateCopy = {\r\n                ...state,\r\n                postsData: state.postsData.filter( p => p.id !== action.post_id),\r\n            };\r\n\r\n            break;\r\n\r\n        }\r\n        default: {\r\n            stateCopy = {...state}\r\n            break;\r\n        }\r\n    }\r\n\r\n    return stateCopy;\r\n}\r\n\r\n/** -------Action creators------- */\r\nexport const addPostActionCreator = (newPostText) => {\r\n    let action = {\r\n        type: ADD_POST,\r\n        newPostText: newPostText,\r\n    }\r\n    return action;\r\n}\r\n\r\nexport const deletePostActionCreator = (post_id) => {\r\n    let action = {\r\n        type: DELETE_POST,\r\n        post_id: post_id,\r\n    }\r\n    return action;\r\n}\r\n/** ------------------------------ */\r\n\r\nexport default newsReducer;","const ADD_NEW_MESSAGE = 'messege-me/messagesPageReducer/ADD-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 2,\r\n            name: 'Linda Lohan',\r\n            avatar: 'https://themified.com/friend-finder/images/users/user-2.jpg',\r\n            lastMessage: 'Hi there, how are you',\r\n        },\r\n        {\r\n            id: 10,\r\n            name: 'Julia Cox',\r\n            avatar: 'https://themified.com/friend-finder/images/users/user-10.jpg',\r\n            lastMessage: 'see you soon',\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Sophia Lee',\r\n            avatar: 'https://themified.com/friend-finder/images/users/user-3.jpg',\r\n            lastMessage: 'Hi there, how are you',\r\n        }\r\n    ],\r\n    activeDialogMessagesData: [\r\n        {\r\n            author: \"other\",\r\n            avatar: \"https://themified.com/friend-finder/images/users/user-2.jpg\",\r\n            message: \"Hi honey, how are you doing???? Long time no see. Where have you been?\",\r\n        },\r\n        {\r\n            author: \"me\",\r\n            avatar: \"https://invisionbyte.ru/test/uploads/monthly_2018_01/Wmug__uf.thumb.jpg.eca0349ccc67dd24370df4c7e452e924.jpg\",\r\n            message: \"I'm fine, thanks! What about you?\",\r\n        },\r\n    ],\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE: {\r\n\r\n            let newMessage = {\r\n                author: \"me\",\r\n                avatar: \"https://invisionbyte.ru/test/uploads/monthly_2018_01/Wmug__uf.thumb.jpg.eca0349ccc67dd24370df4c7e452e924.jpg\",\r\n                message: action.message,\r\n            };\r\n\r\n            stateCopy = { \r\n                ...state,\r\n                newMessageText: '',\r\n                activeDialogMessagesData: [...state.activeDialogMessagesData, newMessage],\r\n            };\r\n\r\n            break;\r\n        }\r\n        default: {\r\n            stateCopy = {...state}\r\n            break;\r\n        }\r\n    }\r\n\r\n    return stateCopy;\r\n}\r\n\r\nexport const addNewMessageCreator = (message) => {\r\n    let action = {\r\n        type: ADD_NEW_MESSAGE,\r\n        message: message,\r\n    }\r\n    return action;\r\n}\r\n\r\nexport default messagesReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.61bc6499.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.d8e9df89.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"follow\":\"Follow_follow__3wl08\"};"],"sourceRoot":""}